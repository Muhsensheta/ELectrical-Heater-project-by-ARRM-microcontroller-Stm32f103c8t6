
ELc_Heater.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012e0  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001410  08001410  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001410  08001410  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08001410  08001410  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001410  08001410  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001410  08001410  00011410  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001414  08001414  00011414  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08001418  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000004  0800141c  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000034  0800141c  00020034  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001343  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000a21  00000000  00000000  00021370  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002e0  00000000  00000000  00021d98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000228  00000000  00000000  00022078  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000012de  00000000  00000000  000222a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010fd  00000000  00000000  0002357e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000046bc  00000000  00000000  0002467b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00028d37  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000878  00000000  00000000  00028d88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000004 	.word	0x20000004
 800014c:	00000000 	.word	0x00000000
 8000150:	080013f8 	.word	0x080013f8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000008 	.word	0x20000008
 800016c:	080013f8 	.word	0x080013f8

08000170 <_delay_ms>:
#include  "ADC_config.h"
#include  "ADC_init.h"


void	_delay_ms(u32 _ms)
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
	for(u32 i = 0; i < (_ms * 500) ; i++)
 8000178:	2300      	movs	r3, #0
 800017a:	60fb      	str	r3, [r7, #12]
 800017c:	e003      	b.n	8000186 <_delay_ms+0x16>
	{
		asm("NOP");
 800017e:	bf00      	nop
	for(u32 i = 0; i < (_ms * 500) ; i++)
 8000180:	68fb      	ldr	r3, [r7, #12]
 8000182:	3301      	adds	r3, #1
 8000184:	60fb      	str	r3, [r7, #12]
 8000186:	687b      	ldr	r3, [r7, #4]
 8000188:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800018c:	fb02 f303 	mul.w	r3, r2, r3
 8000190:	68fa      	ldr	r2, [r7, #12]
 8000192:	429a      	cmp	r2, r3
 8000194:	d3f3      	bcc.n	800017e <_delay_ms+0xe>
	}
}
 8000196:	bf00      	nop
 8000198:	bf00      	nop
 800019a:	3714      	adds	r7, #20
 800019c:	46bd      	mov	sp, r7
 800019e:	bc80      	pop	{r7}
 80001a0:	4770      	bx	lr
	...

080001a4 <ADC_void_init>:
void	ADC_void_init	(void)
{
 80001a4:	b580      	push	{r7, lr}
 80001a6:	af00      	add	r7, sp, #0
	// ON ADC -> ADON -> 1
	SET_BIT(ADC->CR2 , 0);
 80001a8:	4b1e      	ldr	r3, [pc, #120]	; (8000224 <ADC_void_init+0x80>)
 80001aa:	689b      	ldr	r3, [r3, #8]
 80001ac:	4a1d      	ldr	r2, [pc, #116]	; (8000224 <ADC_void_init+0x80>)
 80001ae:	f043 0301 	orr.w	r3, r3, #1
 80001b2:	6093      	str	r3, [r2, #8]
	_delay_ms(20);
 80001b4:	2014      	movs	r0, #20
 80001b6:	f7ff ffdb 	bl	8000170 <_delay_ms>

	// Set External event select for regular group -> SWSTART -> 111
	SET_BIT(ADC->CR2 , 19);
 80001ba:	4b1a      	ldr	r3, [pc, #104]	; (8000224 <ADC_void_init+0x80>)
 80001bc:	689b      	ldr	r3, [r3, #8]
 80001be:	4a19      	ldr	r2, [pc, #100]	; (8000224 <ADC_void_init+0x80>)
 80001c0:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80001c4:	6093      	str	r3, [r2, #8]
	SET_BIT(ADC->CR2 , 17);
 80001c6:	4b17      	ldr	r3, [pc, #92]	; (8000224 <ADC_void_init+0x80>)
 80001c8:	689b      	ldr	r3, [r3, #8]
 80001ca:	4a16      	ldr	r2, [pc, #88]	; (8000224 <ADC_void_init+0x80>)
 80001cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80001d0:	6093      	str	r3, [r2, #8]
	SET_BIT(ADC->CR2 , 18);
 80001d2:	4b14      	ldr	r3, [pc, #80]	; (8000224 <ADC_void_init+0x80>)
 80001d4:	689b      	ldr	r3, [r3, #8]
 80001d6:	4a13      	ldr	r2, [pc, #76]	; (8000224 <ADC_void_init+0x80>)
 80001d8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80001dc:	6093      	str	r3, [r2, #8]

	// Set External trigger conversion mode for regular channels
	SET_BIT(ADC->CR2 , 20);
 80001de:	4b11      	ldr	r3, [pc, #68]	; (8000224 <ADC_void_init+0x80>)
 80001e0:	689b      	ldr	r3, [r3, #8]
 80001e2:	4a10      	ldr	r2, [pc, #64]	; (8000224 <ADC_void_init+0x80>)
 80001e4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80001e8:	6093      	str	r3, [r2, #8]
	// Set  Data alignment -> Right Alignment -> ALIGN > 0
	CLR_BIT(ADC->CR2 , 11);
 80001ea:	4b0e      	ldr	r3, [pc, #56]	; (8000224 <ADC_void_init+0x80>)
 80001ec:	689b      	ldr	r3, [r3, #8]
 80001ee:	4a0d      	ldr	r2, [pc, #52]	; (8000224 <ADC_void_init+0x80>)
 80001f0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80001f4:	6093      	str	r3, [r2, #8]
	// Set Single conversion mode -> CONT -> 0
	CLR_BIT(ADC->CR2 , 1);
 80001f6:	4b0b      	ldr	r3, [pc, #44]	; (8000224 <ADC_void_init+0x80>)
 80001f8:	689b      	ldr	r3, [r3, #8]
 80001fa:	4a0a      	ldr	r2, [pc, #40]	; (8000224 <ADC_void_init+0x80>)
 80001fc:	f023 0302 	bic.w	r3, r3, #2
 8000200:	6093      	str	r3, [r2, #8]

	// Set Number of Conversion in Regular Mode -> Default -> 1


	// Start Calibration -> CAL -> 1
	SET_BIT(ADC->CR2 , 2);
 8000202:	4b08      	ldr	r3, [pc, #32]	; (8000224 <ADC_void_init+0x80>)
 8000204:	689b      	ldr	r3, [r3, #8]
 8000206:	4a07      	ldr	r2, [pc, #28]	; (8000224 <ADC_void_init+0x80>)
 8000208:	f043 0304 	orr.w	r3, r3, #4
 800020c:	6093      	str	r3, [r2, #8]
	while(GET_BIT(ADC->CR2 , 2) != 0);
 800020e:	bf00      	nop
 8000210:	4b04      	ldr	r3, [pc, #16]	; (8000224 <ADC_void_init+0x80>)
 8000212:	689b      	ldr	r3, [r3, #8]
 8000214:	089b      	lsrs	r3, r3, #2
 8000216:	f003 0301 	and.w	r3, r3, #1
 800021a:	2b00      	cmp	r3, #0
 800021c:	d1f8      	bne.n	8000210 <ADC_void_init+0x6c>

}
 800021e:	bf00      	nop
 8000220:	bf00      	nop
 8000222:	bd80      	pop	{r7, pc}
 8000224:	40012400 	.word	0x40012400

08000228 <ADC_u16_read>:
u16		ADC_u16_read	(Channel_ID Copy_enuChannel)
{
 8000228:	b480      	push	{r7}
 800022a:	b083      	sub	sp, #12
 800022c:	af00      	add	r7, sp, #0
 800022e:	4603      	mov	r3, r0
 8000230:	71fb      	strb	r3, [r7, #7]
	u32 Local_u32Reading;
	// Set Channel
	if(Copy_enuChannel <= CHANNEL_9)
 8000232:	79fb      	ldrb	r3, [r7, #7]
 8000234:	2b09      	cmp	r3, #9
 8000236:	d81d      	bhi.n	8000274 <ADC_u16_read+0x4c>
	{

		//ADC->SQR3 &= 0xfffffff0; // Clear 0 -> 4 bits
		//ADC->SQR3 |= Copy_enuChannel;
		CLR_BIT(ADC->SQR3 , 0);
 8000238:	4b19      	ldr	r3, [pc, #100]	; (80002a0 <ADC_u16_read+0x78>)
 800023a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800023c:	4a18      	ldr	r2, [pc, #96]	; (80002a0 <ADC_u16_read+0x78>)
 800023e:	f023 0301 	bic.w	r3, r3, #1
 8000242:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 1);
 8000244:	4b16      	ldr	r3, [pc, #88]	; (80002a0 <ADC_u16_read+0x78>)
 8000246:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000248:	4a15      	ldr	r2, [pc, #84]	; (80002a0 <ADC_u16_read+0x78>)
 800024a:	f023 0302 	bic.w	r3, r3, #2
 800024e:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 2);
 8000250:	4b13      	ldr	r3, [pc, #76]	; (80002a0 <ADC_u16_read+0x78>)
 8000252:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000254:	4a12      	ldr	r2, [pc, #72]	; (80002a0 <ADC_u16_read+0x78>)
 8000256:	f023 0304 	bic.w	r3, r3, #4
 800025a:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 3);
 800025c:	4b10      	ldr	r3, [pc, #64]	; (80002a0 <ADC_u16_read+0x78>)
 800025e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000260:	4a0f      	ldr	r2, [pc, #60]	; (80002a0 <ADC_u16_read+0x78>)
 8000262:	f023 0308 	bic.w	r3, r3, #8
 8000266:	6353      	str	r3, [r2, #52]	; 0x34
		CLR_BIT(ADC->SQR3 , 4);
 8000268:	4b0d      	ldr	r3, [pc, #52]	; (80002a0 <ADC_u16_read+0x78>)
 800026a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800026c:	4a0c      	ldr	r2, [pc, #48]	; (80002a0 <ADC_u16_read+0x78>)
 800026e:	f023 0310 	bic.w	r3, r3, #16
 8000272:	6353      	str	r3, [r2, #52]	; 0x34

	}

	// Start conversion of regular channels -> SWSTART -> 1
	SET_BIT(ADC->CR2 , 22);
 8000274:	4b0a      	ldr	r3, [pc, #40]	; (80002a0 <ADC_u16_read+0x78>)
 8000276:	689b      	ldr	r3, [r3, #8]
 8000278:	4a09      	ldr	r2, [pc, #36]	; (80002a0 <ADC_u16_read+0x78>)
 800027a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800027e:	6093      	str	r3, [r2, #8]
	// Wait until the end of conversion -> SWSTART -> 0
	//while(GET_BIT(ADC->CR2 , 22) == 1);

	while(GET_BIT(ADC->SR , 1) != 1);
 8000280:	bf00      	nop
 8000282:	4b07      	ldr	r3, [pc, #28]	; (80002a0 <ADC_u16_read+0x78>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	085b      	lsrs	r3, r3, #1
 8000288:	f003 0301 	and.w	r3, r3, #1
 800028c:	2b01      	cmp	r3, #1
 800028e:	d1f8      	bne.n	8000282 <ADC_u16_read+0x5a>
	while(GET_BIT(ADC->SR , 1) != 1);
*/
	// Get data -> 0 -> 15
//	Local_u32Reading = (ADC->DR) & 0x0000ffff;
	// Return Data
	return ADC->DR;
 8000290:	4b03      	ldr	r3, [pc, #12]	; (80002a0 <ADC_u16_read+0x78>)
 8000292:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000294:	b29b      	uxth	r3, r3
}
 8000296:	4618      	mov	r0, r3
 8000298:	370c      	adds	r7, #12
 800029a:	46bd      	mov	sp, r7
 800029c:	bc80      	pop	{r7}
 800029e:	4770      	bx	lr
 80002a0:	40012400 	.word	0x40012400

080002a4 <M_GPIO_void_SetPinDir>:

#include "DIO_priv.h"
#include "DIO_int.h"

void M_GPIO_void_SetPinDir(u8 PortID , u8 PinID , u8 Dir)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	4603      	mov	r3, r0
 80002ac:	71fb      	strb	r3, [r7, #7]
 80002ae:	460b      	mov	r3, r1
 80002b0:	71bb      	strb	r3, [r7, #6]
 80002b2:	4613      	mov	r3, r2
 80002b4:	717b      	strb	r3, [r7, #5]
	//Range Check
if(PortID < 3 && PinID < 16 && Dir < 16)
 80002b6:	79fb      	ldrb	r3, [r7, #7]
 80002b8:	2b02      	cmp	r3, #2
 80002ba:	f200 80b6 	bhi.w	800042a <M_GPIO_void_SetPinDir+0x186>
 80002be:	79bb      	ldrb	r3, [r7, #6]
 80002c0:	2b0f      	cmp	r3, #15
 80002c2:	f200 80b2 	bhi.w	800042a <M_GPIO_void_SetPinDir+0x186>
 80002c6:	797b      	ldrb	r3, [r7, #5]
 80002c8:	2b0f      	cmp	r3, #15
 80002ca:	f200 80ae 	bhi.w	800042a <M_GPIO_void_SetPinDir+0x186>
{
	if(PinID < 8) /*PIN0 : PIN7 --> CRL*/
 80002ce:	79bb      	ldrb	r3, [r7, #6]
 80002d0:	2b07      	cmp	r3, #7
 80002d2:	d852      	bhi.n	800037a <M_GPIO_void_SetPinDir+0xd6>
	{
		switch(PortID)
 80002d4:	79fb      	ldrb	r3, [r7, #7]
 80002d6:	2b02      	cmp	r3, #2
 80002d8:	d037      	beq.n	800034a <M_GPIO_void_SetPinDir+0xa6>
 80002da:	2b02      	cmp	r3, #2
 80002dc:	f300 80a6 	bgt.w	800042c <M_GPIO_void_SetPinDir+0x188>
 80002e0:	2b00      	cmp	r3, #0
 80002e2:	d002      	beq.n	80002ea <M_GPIO_void_SetPinDir+0x46>
 80002e4:	2b01      	cmp	r3, #1
 80002e6:	d018      	beq.n	800031a <M_GPIO_void_SetPinDir+0x76>
			GPIOC_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
			break;
		}
	}
	}
}
 80002e8:	e0a0      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
			GPIOA_CRL &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 80002ea:	4b53      	ldr	r3, [pc, #332]	; (8000438 <M_GPIO_void_SetPinDir+0x194>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	79ba      	ldrb	r2, [r7, #6]
 80002f0:	0092      	lsls	r2, r2, #2
 80002f2:	210f      	movs	r1, #15
 80002f4:	fa01 f202 	lsl.w	r2, r1, r2
 80002f8:	43d2      	mvns	r2, r2
 80002fa:	4611      	mov	r1, r2
 80002fc:	4a4e      	ldr	r2, [pc, #312]	; (8000438 <M_GPIO_void_SetPinDir+0x194>)
 80002fe:	400b      	ands	r3, r1
 8000300:	6013      	str	r3, [r2, #0]
			GPIOA_CRL |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000302:	4b4d      	ldr	r3, [pc, #308]	; (8000438 <M_GPIO_void_SetPinDir+0x194>)
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	7979      	ldrb	r1, [r7, #5]
 8000308:	79ba      	ldrb	r2, [r7, #6]
 800030a:	0092      	lsls	r2, r2, #2
 800030c:	fa01 f202 	lsl.w	r2, r1, r2
 8000310:	4611      	mov	r1, r2
 8000312:	4a49      	ldr	r2, [pc, #292]	; (8000438 <M_GPIO_void_SetPinDir+0x194>)
 8000314:	430b      	orrs	r3, r1
 8000316:	6013      	str	r3, [r2, #0]
			break;
 8000318:	e088      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
			GPIOB_CRL &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 800031a:	4b48      	ldr	r3, [pc, #288]	; (800043c <M_GPIO_void_SetPinDir+0x198>)
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	79ba      	ldrb	r2, [r7, #6]
 8000320:	0092      	lsls	r2, r2, #2
 8000322:	210f      	movs	r1, #15
 8000324:	fa01 f202 	lsl.w	r2, r1, r2
 8000328:	43d2      	mvns	r2, r2
 800032a:	4611      	mov	r1, r2
 800032c:	4a43      	ldr	r2, [pc, #268]	; (800043c <M_GPIO_void_SetPinDir+0x198>)
 800032e:	400b      	ands	r3, r1
 8000330:	6013      	str	r3, [r2, #0]
			GPIOB_CRL |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000332:	4b42      	ldr	r3, [pc, #264]	; (800043c <M_GPIO_void_SetPinDir+0x198>)
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	7979      	ldrb	r1, [r7, #5]
 8000338:	79ba      	ldrb	r2, [r7, #6]
 800033a:	0092      	lsls	r2, r2, #2
 800033c:	fa01 f202 	lsl.w	r2, r1, r2
 8000340:	4611      	mov	r1, r2
 8000342:	4a3e      	ldr	r2, [pc, #248]	; (800043c <M_GPIO_void_SetPinDir+0x198>)
 8000344:	430b      	orrs	r3, r1
 8000346:	6013      	str	r3, [r2, #0]
			break;
 8000348:	e070      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
			GPIOC_CRL &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 800034a:	4b3d      	ldr	r3, [pc, #244]	; (8000440 <M_GPIO_void_SetPinDir+0x19c>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	79ba      	ldrb	r2, [r7, #6]
 8000350:	0092      	lsls	r2, r2, #2
 8000352:	210f      	movs	r1, #15
 8000354:	fa01 f202 	lsl.w	r2, r1, r2
 8000358:	43d2      	mvns	r2, r2
 800035a:	4611      	mov	r1, r2
 800035c:	4a38      	ldr	r2, [pc, #224]	; (8000440 <M_GPIO_void_SetPinDir+0x19c>)
 800035e:	400b      	ands	r3, r1
 8000360:	6013      	str	r3, [r2, #0]
			GPIOC_CRL |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000362:	4b37      	ldr	r3, [pc, #220]	; (8000440 <M_GPIO_void_SetPinDir+0x19c>)
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	7979      	ldrb	r1, [r7, #5]
 8000368:	79ba      	ldrb	r2, [r7, #6]
 800036a:	0092      	lsls	r2, r2, #2
 800036c:	fa01 f202 	lsl.w	r2, r1, r2
 8000370:	4611      	mov	r1, r2
 8000372:	4a33      	ldr	r2, [pc, #204]	; (8000440 <M_GPIO_void_SetPinDir+0x19c>)
 8000374:	430b      	orrs	r3, r1
 8000376:	6013      	str	r3, [r2, #0]
			break;
 8000378:	e058      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
	else if(PinID < 16) /*PIN0 : PIN7 --> CRL*/
 800037a:	79bb      	ldrb	r3, [r7, #6]
 800037c:	2b0f      	cmp	r3, #15
 800037e:	d854      	bhi.n	800042a <M_GPIO_void_SetPinDir+0x186>
		PinID -=8;
 8000380:	79bb      	ldrb	r3, [r7, #6]
 8000382:	3b08      	subs	r3, #8
 8000384:	71bb      	strb	r3, [r7, #6]
		switch(PortID)
 8000386:	79fb      	ldrb	r3, [r7, #7]
 8000388:	2b02      	cmp	r3, #2
 800038a:	d036      	beq.n	80003fa <M_GPIO_void_SetPinDir+0x156>
 800038c:	2b02      	cmp	r3, #2
 800038e:	dc4d      	bgt.n	800042c <M_GPIO_void_SetPinDir+0x188>
 8000390:	2b00      	cmp	r3, #0
 8000392:	d002      	beq.n	800039a <M_GPIO_void_SetPinDir+0xf6>
 8000394:	2b01      	cmp	r3, #1
 8000396:	d018      	beq.n	80003ca <M_GPIO_void_SetPinDir+0x126>
}
 8000398:	e048      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
			GPIOA_CRH &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 800039a:	4b2a      	ldr	r3, [pc, #168]	; (8000444 <M_GPIO_void_SetPinDir+0x1a0>)
 800039c:	681b      	ldr	r3, [r3, #0]
 800039e:	79ba      	ldrb	r2, [r7, #6]
 80003a0:	0092      	lsls	r2, r2, #2
 80003a2:	210f      	movs	r1, #15
 80003a4:	fa01 f202 	lsl.w	r2, r1, r2
 80003a8:	43d2      	mvns	r2, r2
 80003aa:	4611      	mov	r1, r2
 80003ac:	4a25      	ldr	r2, [pc, #148]	; (8000444 <M_GPIO_void_SetPinDir+0x1a0>)
 80003ae:	400b      	ands	r3, r1
 80003b0:	6013      	str	r3, [r2, #0]
			GPIOA_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 80003b2:	4b24      	ldr	r3, [pc, #144]	; (8000444 <M_GPIO_void_SetPinDir+0x1a0>)
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	7979      	ldrb	r1, [r7, #5]
 80003b8:	79ba      	ldrb	r2, [r7, #6]
 80003ba:	0092      	lsls	r2, r2, #2
 80003bc:	fa01 f202 	lsl.w	r2, r1, r2
 80003c0:	4611      	mov	r1, r2
 80003c2:	4a20      	ldr	r2, [pc, #128]	; (8000444 <M_GPIO_void_SetPinDir+0x1a0>)
 80003c4:	430b      	orrs	r3, r1
 80003c6:	6013      	str	r3, [r2, #0]
			break;
 80003c8:	e030      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
			GPIOB_CRH &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 80003ca:	4b1f      	ldr	r3, [pc, #124]	; (8000448 <M_GPIO_void_SetPinDir+0x1a4>)
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	79ba      	ldrb	r2, [r7, #6]
 80003d0:	0092      	lsls	r2, r2, #2
 80003d2:	210f      	movs	r1, #15
 80003d4:	fa01 f202 	lsl.w	r2, r1, r2
 80003d8:	43d2      	mvns	r2, r2
 80003da:	4611      	mov	r1, r2
 80003dc:	4a1a      	ldr	r2, [pc, #104]	; (8000448 <M_GPIO_void_SetPinDir+0x1a4>)
 80003de:	400b      	ands	r3, r1
 80003e0:	6013      	str	r3, [r2, #0]
			GPIOB_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 80003e2:	4b19      	ldr	r3, [pc, #100]	; (8000448 <M_GPIO_void_SetPinDir+0x1a4>)
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	7979      	ldrb	r1, [r7, #5]
 80003e8:	79ba      	ldrb	r2, [r7, #6]
 80003ea:	0092      	lsls	r2, r2, #2
 80003ec:	fa01 f202 	lsl.w	r2, r1, r2
 80003f0:	4611      	mov	r1, r2
 80003f2:	4a15      	ldr	r2, [pc, #84]	; (8000448 <M_GPIO_void_SetPinDir+0x1a4>)
 80003f4:	430b      	orrs	r3, r1
 80003f6:	6013      	str	r3, [r2, #0]
			break;
 80003f8:	e018      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
			GPIOC_CRH &= ~(0b1111<<(PinID * 4)); //Clear the 4 Bits
 80003fa:	4b14      	ldr	r3, [pc, #80]	; (800044c <M_GPIO_void_SetPinDir+0x1a8>)
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	79ba      	ldrb	r2, [r7, #6]
 8000400:	0092      	lsls	r2, r2, #2
 8000402:	210f      	movs	r1, #15
 8000404:	fa01 f202 	lsl.w	r2, r1, r2
 8000408:	43d2      	mvns	r2, r2
 800040a:	4611      	mov	r1, r2
 800040c:	4a0f      	ldr	r2, [pc, #60]	; (800044c <M_GPIO_void_SetPinDir+0x1a8>)
 800040e:	400b      	ands	r3, r1
 8000410:	6013      	str	r3, [r2, #0]
			GPIOC_CRH |=  ((Dir)<<(PinID * 4)); //Assign The 4 Bits
 8000412:	4b0e      	ldr	r3, [pc, #56]	; (800044c <M_GPIO_void_SetPinDir+0x1a8>)
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	7979      	ldrb	r1, [r7, #5]
 8000418:	79ba      	ldrb	r2, [r7, #6]
 800041a:	0092      	lsls	r2, r2, #2
 800041c:	fa01 f202 	lsl.w	r2, r1, r2
 8000420:	4611      	mov	r1, r2
 8000422:	4a0a      	ldr	r2, [pc, #40]	; (800044c <M_GPIO_void_SetPinDir+0x1a8>)
 8000424:	430b      	orrs	r3, r1
 8000426:	6013      	str	r3, [r2, #0]
			break;
 8000428:	e000      	b.n	800042c <M_GPIO_void_SetPinDir+0x188>
	}
 800042a:	bf00      	nop
}
 800042c:	bf00      	nop
 800042e:	370c      	adds	r7, #12
 8000430:	46bd      	mov	sp, r7
 8000432:	bc80      	pop	{r7}
 8000434:	4770      	bx	lr
 8000436:	bf00      	nop
 8000438:	40010800 	.word	0x40010800
 800043c:	40010c00 	.word	0x40010c00
 8000440:	40011000 	.word	0x40011000
 8000444:	40010804 	.word	0x40010804
 8000448:	40010c04 	.word	0x40010c04
 800044c:	40011004 	.word	0x40011004

08000450 <M_GPIO_void_SetPinValue>:
void M_GPIO_void_SetPinValue(u8 PortID , u8 PinID , u8 Value)
{
 8000450:	b480      	push	{r7}
 8000452:	b083      	sub	sp, #12
 8000454:	af00      	add	r7, sp, #0
 8000456:	4603      	mov	r3, r0
 8000458:	71fb      	strb	r3, [r7, #7]
 800045a:	460b      	mov	r3, r1
 800045c:	71bb      	strb	r3, [r7, #6]
 800045e:	4613      	mov	r3, r2
 8000460:	717b      	strb	r3, [r7, #5]
	//Range Check
if(PortID < 3 && PinID < 16)
 8000462:	79fb      	ldrb	r3, [r7, #7]
 8000464:	2b02      	cmp	r3, #2
 8000466:	d861      	bhi.n	800052c <M_GPIO_void_SetPinValue+0xdc>
 8000468:	79bb      	ldrb	r3, [r7, #6]
 800046a:	2b0f      	cmp	r3, #15
 800046c:	d85e      	bhi.n	800052c <M_GPIO_void_SetPinValue+0xdc>
{
	if(Value == LOW)
 800046e:	797b      	ldrb	r3, [r7, #5]
 8000470:	2b00      	cmp	r3, #0
 8000472:	d12d      	bne.n	80004d0 <M_GPIO_void_SetPinValue+0x80>
	{
		switch(PortID)
 8000474:	79fb      	ldrb	r3, [r7, #7]
 8000476:	2b02      	cmp	r3, #2
 8000478:	d01e      	beq.n	80004b8 <M_GPIO_void_SetPinValue+0x68>
 800047a:	2b02      	cmp	r3, #2
 800047c:	dc57      	bgt.n	800052e <M_GPIO_void_SetPinValue+0xde>
 800047e:	2b00      	cmp	r3, #0
 8000480:	d002      	beq.n	8000488 <M_GPIO_void_SetPinValue+0x38>
 8000482:	2b01      	cmp	r3, #1
 8000484:	d00c      	beq.n	80004a0 <M_GPIO_void_SetPinValue+0x50>
			SET_BIT(GPIOC_ODR , PinID);
			break;
		}
	}
}
}
 8000486:	e052      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
			CLR_BIT(GPIOA_ODR , PinID);
 8000488:	4b2b      	ldr	r3, [pc, #172]	; (8000538 <M_GPIO_void_SetPinValue+0xe8>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	79ba      	ldrb	r2, [r7, #6]
 800048e:	2101      	movs	r1, #1
 8000490:	fa01 f202 	lsl.w	r2, r1, r2
 8000494:	43d2      	mvns	r2, r2
 8000496:	4611      	mov	r1, r2
 8000498:	4a27      	ldr	r2, [pc, #156]	; (8000538 <M_GPIO_void_SetPinValue+0xe8>)
 800049a:	400b      	ands	r3, r1
 800049c:	6013      	str	r3, [r2, #0]
			break;
 800049e:	e046      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
			CLR_BIT(GPIOB_ODR , PinID);
 80004a0:	4b26      	ldr	r3, [pc, #152]	; (800053c <M_GPIO_void_SetPinValue+0xec>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	79ba      	ldrb	r2, [r7, #6]
 80004a6:	2101      	movs	r1, #1
 80004a8:	fa01 f202 	lsl.w	r2, r1, r2
 80004ac:	43d2      	mvns	r2, r2
 80004ae:	4611      	mov	r1, r2
 80004b0:	4a22      	ldr	r2, [pc, #136]	; (800053c <M_GPIO_void_SetPinValue+0xec>)
 80004b2:	400b      	ands	r3, r1
 80004b4:	6013      	str	r3, [r2, #0]
			break;
 80004b6:	e03a      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
			CLR_BIT(GPIOC_ODR , PinID);
 80004b8:	4b21      	ldr	r3, [pc, #132]	; (8000540 <M_GPIO_void_SetPinValue+0xf0>)
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	79ba      	ldrb	r2, [r7, #6]
 80004be:	2101      	movs	r1, #1
 80004c0:	fa01 f202 	lsl.w	r2, r1, r2
 80004c4:	43d2      	mvns	r2, r2
 80004c6:	4611      	mov	r1, r2
 80004c8:	4a1d      	ldr	r2, [pc, #116]	; (8000540 <M_GPIO_void_SetPinValue+0xf0>)
 80004ca:	400b      	ands	r3, r1
 80004cc:	6013      	str	r3, [r2, #0]
			break;
 80004ce:	e02e      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
	else if(Value == HIGH)
 80004d0:	797b      	ldrb	r3, [r7, #5]
 80004d2:	2b01      	cmp	r3, #1
 80004d4:	d12a      	bne.n	800052c <M_GPIO_void_SetPinValue+0xdc>
		switch(PortID)
 80004d6:	79fb      	ldrb	r3, [r7, #7]
 80004d8:	2b02      	cmp	r3, #2
 80004da:	d01c      	beq.n	8000516 <M_GPIO_void_SetPinValue+0xc6>
 80004dc:	2b02      	cmp	r3, #2
 80004de:	dc26      	bgt.n	800052e <M_GPIO_void_SetPinValue+0xde>
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	d002      	beq.n	80004ea <M_GPIO_void_SetPinValue+0x9a>
 80004e4:	2b01      	cmp	r3, #1
 80004e6:	d00b      	beq.n	8000500 <M_GPIO_void_SetPinValue+0xb0>
}
 80004e8:	e021      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
			SET_BIT(GPIOA_ODR , PinID);
 80004ea:	4b13      	ldr	r3, [pc, #76]	; (8000538 <M_GPIO_void_SetPinValue+0xe8>)
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	79ba      	ldrb	r2, [r7, #6]
 80004f0:	2101      	movs	r1, #1
 80004f2:	fa01 f202 	lsl.w	r2, r1, r2
 80004f6:	4611      	mov	r1, r2
 80004f8:	4a0f      	ldr	r2, [pc, #60]	; (8000538 <M_GPIO_void_SetPinValue+0xe8>)
 80004fa:	430b      	orrs	r3, r1
 80004fc:	6013      	str	r3, [r2, #0]
			break;
 80004fe:	e016      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
			SET_BIT(GPIOB_ODR , PinID);
 8000500:	4b0e      	ldr	r3, [pc, #56]	; (800053c <M_GPIO_void_SetPinValue+0xec>)
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	79ba      	ldrb	r2, [r7, #6]
 8000506:	2101      	movs	r1, #1
 8000508:	fa01 f202 	lsl.w	r2, r1, r2
 800050c:	4611      	mov	r1, r2
 800050e:	4a0b      	ldr	r2, [pc, #44]	; (800053c <M_GPIO_void_SetPinValue+0xec>)
 8000510:	430b      	orrs	r3, r1
 8000512:	6013      	str	r3, [r2, #0]
			break;
 8000514:	e00b      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
			SET_BIT(GPIOC_ODR , PinID);
 8000516:	4b0a      	ldr	r3, [pc, #40]	; (8000540 <M_GPIO_void_SetPinValue+0xf0>)
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	79ba      	ldrb	r2, [r7, #6]
 800051c:	2101      	movs	r1, #1
 800051e:	fa01 f202 	lsl.w	r2, r1, r2
 8000522:	4611      	mov	r1, r2
 8000524:	4a06      	ldr	r2, [pc, #24]	; (8000540 <M_GPIO_void_SetPinValue+0xf0>)
 8000526:	430b      	orrs	r3, r1
 8000528:	6013      	str	r3, [r2, #0]
			break;
 800052a:	e000      	b.n	800052e <M_GPIO_void_SetPinValue+0xde>
	}
 800052c:	bf00      	nop
}
 800052e:	bf00      	nop
 8000530:	370c      	adds	r7, #12
 8000532:	46bd      	mov	sp, r7
 8000534:	bc80      	pop	{r7}
 8000536:	4770      	bx	lr
 8000538:	4001080c 	.word	0x4001080c
 800053c:	40010c0c 	.word	0x40010c0c
 8000540:	4001100c 	.word	0x4001100c

08000544 <M_GPIO_void_GetPinValue>:
void M_GPIO_void_GetPinValue(u8 PortID , u8 PinID , u8 *Value)
{
 8000544:	b480      	push	{r7}
 8000546:	b083      	sub	sp, #12
 8000548:	af00      	add	r7, sp, #0
 800054a:	4603      	mov	r3, r0
 800054c:	603a      	str	r2, [r7, #0]
 800054e:	71fb      	strb	r3, [r7, #7]
 8000550:	460b      	mov	r3, r1
 8000552:	71bb      	strb	r3, [r7, #6]
	//Range Check
if(PortID < 3 && PinID < 16)
 8000554:	79fb      	ldrb	r3, [r7, #7]
 8000556:	2b02      	cmp	r3, #2
 8000558:	d830      	bhi.n	80005bc <M_GPIO_void_GetPinValue+0x78>
 800055a:	79bb      	ldrb	r3, [r7, #6]
 800055c:	2b0f      	cmp	r3, #15
 800055e:	d82d      	bhi.n	80005bc <M_GPIO_void_GetPinValue+0x78>
{
		switch(PortID)
 8000560:	79fb      	ldrb	r3, [r7, #7]
 8000562:	2b02      	cmp	r3, #2
 8000564:	d01e      	beq.n	80005a4 <M_GPIO_void_GetPinValue+0x60>
 8000566:	2b02      	cmp	r3, #2
 8000568:	dc29      	bgt.n	80005be <M_GPIO_void_GetPinValue+0x7a>
 800056a:	2b00      	cmp	r3, #0
 800056c:	d002      	beq.n	8000574 <M_GPIO_void_GetPinValue+0x30>
 800056e:	2b01      	cmp	r3, #1
 8000570:	d00c      	beq.n	800058c <M_GPIO_void_GetPinValue+0x48>
		case PORTC_ID:
			*Value = GET_BIT(GPIOC_IDR , PinID);
			break;
		}
	}
}
 8000572:	e024      	b.n	80005be <M_GPIO_void_GetPinValue+0x7a>
			*Value = GET_BIT(GPIOA_IDR , PinID);
 8000574:	4b14      	ldr	r3, [pc, #80]	; (80005c8 <M_GPIO_void_GetPinValue+0x84>)
 8000576:	681a      	ldr	r2, [r3, #0]
 8000578:	79bb      	ldrb	r3, [r7, #6]
 800057a:	fa22 f303 	lsr.w	r3, r2, r3
 800057e:	b2db      	uxtb	r3, r3
 8000580:	f003 0301 	and.w	r3, r3, #1
 8000584:	b2da      	uxtb	r2, r3
 8000586:	683b      	ldr	r3, [r7, #0]
 8000588:	701a      	strb	r2, [r3, #0]
			break;
 800058a:	e018      	b.n	80005be <M_GPIO_void_GetPinValue+0x7a>
			*Value = GET_BIT(GPIOB_IDR , PinID);
 800058c:	4b0f      	ldr	r3, [pc, #60]	; (80005cc <M_GPIO_void_GetPinValue+0x88>)
 800058e:	681a      	ldr	r2, [r3, #0]
 8000590:	79bb      	ldrb	r3, [r7, #6]
 8000592:	fa22 f303 	lsr.w	r3, r2, r3
 8000596:	b2db      	uxtb	r3, r3
 8000598:	f003 0301 	and.w	r3, r3, #1
 800059c:	b2da      	uxtb	r2, r3
 800059e:	683b      	ldr	r3, [r7, #0]
 80005a0:	701a      	strb	r2, [r3, #0]
			break;
 80005a2:	e00c      	b.n	80005be <M_GPIO_void_GetPinValue+0x7a>
			*Value = GET_BIT(GPIOC_IDR , PinID);
 80005a4:	4b0a      	ldr	r3, [pc, #40]	; (80005d0 <M_GPIO_void_GetPinValue+0x8c>)
 80005a6:	681a      	ldr	r2, [r3, #0]
 80005a8:	79bb      	ldrb	r3, [r7, #6]
 80005aa:	fa22 f303 	lsr.w	r3, r2, r3
 80005ae:	b2db      	uxtb	r3, r3
 80005b0:	f003 0301 	and.w	r3, r3, #1
 80005b4:	b2da      	uxtb	r2, r3
 80005b6:	683b      	ldr	r3, [r7, #0]
 80005b8:	701a      	strb	r2, [r3, #0]
			break;
 80005ba:	e000      	b.n	80005be <M_GPIO_void_GetPinValue+0x7a>
	}
 80005bc:	bf00      	nop
}
 80005be:	bf00      	nop
 80005c0:	370c      	adds	r7, #12
 80005c2:	46bd      	mov	sp, r7
 80005c4:	bc80      	pop	{r7}
 80005c6:	4770      	bx	lr
 80005c8:	40010808 	.word	0x40010808
 80005cc:	40010c08 	.word	0x40010c08
 80005d0:	40011008 	.word	0x40011008

080005d4 <M_GPIO_void_TogPin>:
void M_GPIO_void_TogPin(u8 PortID , u8 PinID)
{
 80005d4:	b480      	push	{r7}
 80005d6:	b083      	sub	sp, #12
 80005d8:	af00      	add	r7, sp, #0
 80005da:	4603      	mov	r3, r0
 80005dc:	460a      	mov	r2, r1
 80005de:	71fb      	strb	r3, [r7, #7]
 80005e0:	4613      	mov	r3, r2
 80005e2:	71bb      	strb	r3, [r7, #6]
	switch(PortID)
 80005e4:	79fb      	ldrb	r3, [r7, #7]
 80005e6:	2b02      	cmp	r3, #2
 80005e8:	d01c      	beq.n	8000624 <M_GPIO_void_TogPin+0x50>
 80005ea:	2b02      	cmp	r3, #2
 80005ec:	dc25      	bgt.n	800063a <M_GPIO_void_TogPin+0x66>
 80005ee:	2b00      	cmp	r3, #0
 80005f0:	d002      	beq.n	80005f8 <M_GPIO_void_TogPin+0x24>
 80005f2:	2b01      	cmp	r3, #1
 80005f4:	d00b      	beq.n	800060e <M_GPIO_void_TogPin+0x3a>
		break;
	case PORTC_ID:
		TOG_BIT(GPIOC_ODR , PinID);
		break;
	}
}
 80005f6:	e020      	b.n	800063a <M_GPIO_void_TogPin+0x66>
		TOG_BIT(GPIOA_ODR , PinID);
 80005f8:	4b12      	ldr	r3, [pc, #72]	; (8000644 <M_GPIO_void_TogPin+0x70>)
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	79ba      	ldrb	r2, [r7, #6]
 80005fe:	2101      	movs	r1, #1
 8000600:	fa01 f202 	lsl.w	r2, r1, r2
 8000604:	4611      	mov	r1, r2
 8000606:	4a0f      	ldr	r2, [pc, #60]	; (8000644 <M_GPIO_void_TogPin+0x70>)
 8000608:	404b      	eors	r3, r1
 800060a:	6013      	str	r3, [r2, #0]
		break;
 800060c:	e015      	b.n	800063a <M_GPIO_void_TogPin+0x66>
		TOG_BIT(GPIOB_ODR , PinID);
 800060e:	4b0e      	ldr	r3, [pc, #56]	; (8000648 <M_GPIO_void_TogPin+0x74>)
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	79ba      	ldrb	r2, [r7, #6]
 8000614:	2101      	movs	r1, #1
 8000616:	fa01 f202 	lsl.w	r2, r1, r2
 800061a:	4611      	mov	r1, r2
 800061c:	4a0a      	ldr	r2, [pc, #40]	; (8000648 <M_GPIO_void_TogPin+0x74>)
 800061e:	404b      	eors	r3, r1
 8000620:	6013      	str	r3, [r2, #0]
		break;
 8000622:	e00a      	b.n	800063a <M_GPIO_void_TogPin+0x66>
		TOG_BIT(GPIOC_ODR , PinID);
 8000624:	4b09      	ldr	r3, [pc, #36]	; (800064c <M_GPIO_void_TogPin+0x78>)
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	79ba      	ldrb	r2, [r7, #6]
 800062a:	2101      	movs	r1, #1
 800062c:	fa01 f202 	lsl.w	r2, r1, r2
 8000630:	4611      	mov	r1, r2
 8000632:	4a06      	ldr	r2, [pc, #24]	; (800064c <M_GPIO_void_TogPin+0x78>)
 8000634:	404b      	eors	r3, r1
 8000636:	6013      	str	r3, [r2, #0]
		break;
 8000638:	bf00      	nop
}
 800063a:	bf00      	nop
 800063c:	370c      	adds	r7, #12
 800063e:	46bd      	mov	sp, r7
 8000640:	bc80      	pop	{r7}
 8000642:	4770      	bx	lr
 8000644:	4001080c 	.word	0x4001080c
 8000648:	40010c0c 	.word	0x40010c0c
 800064c:	4001100c 	.word	0x4001100c

08000650 <SetON_Butt_Control>:
u8 Enval;
u8 Deval;
u8 Button;

void SetON_Butt_Control(void)
{
 8000650:	b580      	push	{r7, lr}
 8000652:	af00      	add	r7, sp, #0

	M_GPIO_void_GetPinValue(PORTB_ID, PIN6_ID, &Button);
 8000654:	4a09      	ldr	r2, [pc, #36]	; (800067c <SetON_Butt_Control+0x2c>)
 8000656:	2106      	movs	r1, #6
 8000658:	2001      	movs	r0, #1
 800065a:	f7ff ff73 	bl	8000544 <M_GPIO_void_GetPinValue>
	 if (Button==0)
 800065e:	4b07      	ldr	r3, [pc, #28]	; (800067c <SetON_Butt_Control+0x2c>)
 8000660:	781b      	ldrb	r3, [r3, #0]
 8000662:	2b00      	cmp	r3, #0
 8000664:	d107      	bne.n	8000676 <SetON_Butt_Control+0x26>
			      {
				    M_GPIO_void_TogPin(SSD_DIG_1_EN_PORT, SSD_DIG_1_EN_PIN);
 8000666:	2109      	movs	r1, #9
 8000668:	2000      	movs	r0, #0
 800066a:	f7ff ffb3 	bl	80005d4 <M_GPIO_void_TogPin>
				    M_GPIO_void_TogPin(SSD_DIG_2_EN_PORT, SSD_DIG_2_EN_PIN);
 800066e:	210a      	movs	r1, #10
 8000670:	2000      	movs	r0, #0
 8000672:	f7ff ffaf 	bl	80005d4 <M_GPIO_void_TogPin>

			      }
}
 8000676:	bf00      	nop
 8000678:	bd80      	pop	{r7, pc}
 800067a:	bf00      	nop
 800067c:	20000022 	.word	0x20000022

08000680 <Butt_Control>:
u8 Butt_Control(void)
{
 8000680:	b580      	push	{r7, lr}
 8000682:	af00      	add	r7, sp, #0
	if ( (Count<70)&&( Count>=35))
 8000684:	4b1a      	ldr	r3, [pc, #104]	; (80006f0 <Butt_Control+0x70>)
 8000686:	781b      	ldrb	r3, [r3, #0]
 8000688:	2b45      	cmp	r3, #69	; 0x45
 800068a:	d823      	bhi.n	80006d4 <Butt_Control+0x54>
 800068c:	4b18      	ldr	r3, [pc, #96]	; (80006f0 <Butt_Control+0x70>)
 800068e:	781b      	ldrb	r3, [r3, #0]
 8000690:	2b22      	cmp	r3, #34	; 0x22
 8000692:	d91f      	bls.n	80006d4 <Butt_Control+0x54>
	{
		M_GPIO_void_GetPinValue(PORTA_ID, PIN12_ID, &Enval);
 8000694:	4a17      	ldr	r2, [pc, #92]	; (80006f4 <Butt_Control+0x74>)
 8000696:	210c      	movs	r1, #12
 8000698:	2000      	movs	r0, #0
 800069a:	f7ff ff53 	bl	8000544 <M_GPIO_void_GetPinValue>
		M_GPIO_void_GetPinValue(PORTA_ID, PIN15_ID, & Deval);
 800069e:	4a16      	ldr	r2, [pc, #88]	; (80006f8 <Butt_Control+0x78>)
 80006a0:	210f      	movs	r1, #15
 80006a2:	2000      	movs	r0, #0
 80006a4:	f7ff ff4e 	bl	8000544 <M_GPIO_void_GetPinValue>

		   if (Enval==0)
 80006a8:	4b12      	ldr	r3, [pc, #72]	; (80006f4 <Butt_Control+0x74>)
 80006aa:	781b      	ldrb	r3, [r3, #0]
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	d106      	bne.n	80006be <Butt_Control+0x3e>
		      {
			Count++;
 80006b0:	4b0f      	ldr	r3, [pc, #60]	; (80006f0 <Butt_Control+0x70>)
 80006b2:	781b      	ldrb	r3, [r3, #0]
 80006b4:	3301      	adds	r3, #1
 80006b6:	b2da      	uxtb	r2, r3
 80006b8:	4b0d      	ldr	r3, [pc, #52]	; (80006f0 <Butt_Control+0x70>)
 80006ba:	701a      	strb	r2, [r3, #0]
		   if (Enval==0)
 80006bc:	e00e      	b.n	80006dc <Butt_Control+0x5c>

		      }
	     	else if (Deval==0)
 80006be:	4b0e      	ldr	r3, [pc, #56]	; (80006f8 <Butt_Control+0x78>)
 80006c0:	781b      	ldrb	r3, [r3, #0]
 80006c2:	2b00      	cmp	r3, #0
 80006c4:	d10a      	bne.n	80006dc <Butt_Control+0x5c>
		     {
			Count--;
 80006c6:	4b0a      	ldr	r3, [pc, #40]	; (80006f0 <Butt_Control+0x70>)
 80006c8:	781b      	ldrb	r3, [r3, #0]
 80006ca:	3b01      	subs	r3, #1
 80006cc:	b2da      	uxtb	r2, r3
 80006ce:	4b08      	ldr	r3, [pc, #32]	; (80006f0 <Butt_Control+0x70>)
 80006d0:	701a      	strb	r2, [r3, #0]
		   if (Enval==0)
 80006d2:	e003      	b.n	80006dc <Butt_Control+0x5c>
		     }

	  }
	else
	{
		Count=35;
 80006d4:	4b06      	ldr	r3, [pc, #24]	; (80006f0 <Butt_Control+0x70>)
 80006d6:	2223      	movs	r2, #35	; 0x23
 80006d8:	701a      	strb	r2, [r3, #0]
 80006da:	e000      	b.n	80006de <Butt_Control+0x5e>
		   if (Enval==0)
 80006dc:	bf00      	nop
	}

	H_SSD_void_DisplayNumber(Count);
 80006de:	4b04      	ldr	r3, [pc, #16]	; (80006f0 <Butt_Control+0x70>)
 80006e0:	781b      	ldrb	r3, [r3, #0]
 80006e2:	4618      	mov	r0, r3
 80006e4:	f000 fa56 	bl	8000b94 <H_SSD_void_DisplayNumber>
	return Count;
 80006e8:	4b01      	ldr	r3, [pc, #4]	; (80006f0 <Butt_Control+0x70>)
 80006ea:	781b      	ldrb	r3, [r3, #0]

}
 80006ec:	4618      	mov	r0, r3
 80006ee:	bd80      	pop	{r7, pc}
 80006f0:	20000000 	.word	0x20000000
 80006f4:	20000020 	.word	0x20000020
 80006f8:	20000021 	.word	0x20000021

080006fc <main>:

u16 global_u16Reading;
u8 Temp;

int main(void)
{
 80006fc:	b580      	push	{r7, lr}
 80006fe:	af00      	add	r7, sp, #0
	/******************* Initialization ********************/

	// System Clk init
	MRCC_voidSysClkInit();
 8000700:	f000 f986 	bl	8000a10 <MRCC_voidSysClkInit>

	// Enable Per Clk "RCC" -> DIO_A , DIO_C, DIO_B
	MRCC_voidEnablePerClk(RCC_APB2,2);
 8000704:	2102      	movs	r1, #2
 8000706:	2002      	movs	r0, #2
 8000708:	f000 f99e 	bl	8000a48 <MRCC_voidEnablePerClk>
	MRCC_voidEnablePerClk(RCC_APB2,4);
 800070c:	2104      	movs	r1, #4
 800070e:	2002      	movs	r0, #2
 8000710:	f000 f99a 	bl	8000a48 <MRCC_voidEnablePerClk>
	MRCC_voidEnablePerClk(RCC_APB2,3);
 8000714:	2103      	movs	r1, #3
 8000716:	2002      	movs	r0, #2
 8000718:	f000 f996 	bl	8000a48 <MRCC_voidEnablePerClk>


	// Set ADC Prescaler
	MRCC_voidSetADCPre(RCC_ADC_PRE_2);
 800071c:	2000      	movs	r0, #0
 800071e:	f000 f9d5 	bl	8000acc <MRCC_voidSetADCPre>

	// Enable Per Clk "RCC" -> ADC -> 9
	MRCC_voidEnablePerClk(RCC_APB2,9);
 8000722:	2109      	movs	r1, #9
 8000724:	2002      	movs	r0, #2
 8000726:	f000 f98f 	bl	8000a48 <MRCC_voidEnablePerClk>

	// Set Direction for ADC channel_0 as IN_ANALOG
	M_GPIO_void_SetPinDir(PORTA_ID, PIN0_ID, IN_ANALOG);
 800072a:	2200      	movs	r2, #0
 800072c:	2100      	movs	r1, #0
 800072e:	2000      	movs	r0, #0
 8000730:	f7ff fdb8 	bl	80002a4 <M_GPIO_void_SetPinDir>
   // M_GPIO_void_SetPinValue(PORTA_ID, PIN0_ID, HIGH);
	// Initialize ADC
	ADC_void_init();
 8000734:	f7ff fd36 	bl	80001a4 <ADC_void_init>

	// Initialize LCD
	H_LCD_void_Init();
 8000738:	f000 f84c 	bl	80007d4 <H_LCD_void_Init>
	H_SSD_void_init();
 800073c:	f000 f9ea 	bl	8000b14 <H_SSD_void_init>
	PB_void_Init();
 8000740:	f000 f944 	bl	80009cc <PB_void_Init>

	// SET LEDs direction
	M_GPIO_void_SetPinDir(PORTB_ID, PIN10_ID, OUT_10MHZ_PP);//for led red out
 8000744:	2201      	movs	r2, #1
 8000746:	210a      	movs	r1, #10
 8000748:	2001      	movs	r0, #1
 800074a:	f7ff fdab 	bl	80002a4 <M_GPIO_void_SetPinDir>

	M_GPIO_void_SetPinDir(PORTB_ID, PIN0_ID, OUT_10MHZ_PP);
 800074e:	2201      	movs	r2, #1
 8000750:	2100      	movs	r1, #0
 8000752:	2001      	movs	r0, #1
 8000754:	f7ff fda6 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTB_ID, PIN1_ID, OUT_10MHZ_PP);
 8000758:	2201      	movs	r2, #1
 800075a:	2101      	movs	r1, #1
 800075c:	2001      	movs	r0, #1
 800075e:	f7ff fda1 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTC_ID, PIN13_ID, OUT_10MHZ_PP);
 8000762:	2201      	movs	r2, #1
 8000764:	210d      	movs	r1, #13
 8000766:	2002      	movs	r0, #2
 8000768:	f7ff fd9c 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTC_ID, PIN14_ID, OUT_10MHZ_PP);
 800076c:	2201      	movs	r2, #1
 800076e:	210e      	movs	r1, #14
 8000770:	2002      	movs	r0, #2
 8000772:	f7ff fd97 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(PORTC_ID, PIN15_ID, OUT_10MHZ_PP);
 8000776:	2201      	movs	r2, #1
 8000778:	210f      	movs	r1, #15
 800077a:	2002      	movs	r0, #2
 800077c:	f7ff fd92 	bl	80002a4 <M_GPIO_void_SetPinDir>

	/*******************   Super LOOP   ********************/
	while(1)
	{

		SetON_Butt_Control();
 8000780:	f7ff ff66 	bl	8000650 <SetON_Butt_Control>
		Temp=Butt_Control();
 8000784:	f7ff ff7c 	bl	8000680 <Butt_Control>
 8000788:	4603      	mov	r3, r0
 800078a:	461a      	mov	r2, r3
 800078c:	4b0b      	ldr	r3, [pc, #44]	; (80007bc <main+0xc0>)
 800078e:	701a      	strb	r2, [r3, #0]
		if (ADC_u16_read(CHANNEL_0)<=Temp)
 8000790:	2000      	movs	r0, #0
 8000792:	f7ff fd49 	bl	8000228 <ADC_u16_read>
 8000796:	4603      	mov	r3, r0
 8000798:	461a      	mov	r2, r3
 800079a:	4b08      	ldr	r3, [pc, #32]	; (80007bc <main+0xc0>)
 800079c:	781b      	ldrb	r3, [r3, #0]
 800079e:	b29b      	uxth	r3, r3
 80007a0:	429a      	cmp	r2, r3
 80007a2:	d805      	bhi.n	80007b0 <main+0xb4>
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN10_ID, HIGH);
 80007a4:	2201      	movs	r2, #1
 80007a6:	210a      	movs	r1, #10
 80007a8:	2001      	movs	r0, #1
 80007aa:	f7ff fe51 	bl	8000450 <M_GPIO_void_SetPinValue>
 80007ae:	e7e7      	b.n	8000780 <main+0x84>
		}
		else
		{
			M_GPIO_void_SetPinValue(PORTB_ID, PIN10_ID, LOW);
 80007b0:	2200      	movs	r2, #0
 80007b2:	210a      	movs	r1, #10
 80007b4:	2001      	movs	r0, #1
 80007b6:	f7ff fe4b 	bl	8000450 <M_GPIO_void_SetPinValue>
		SetON_Butt_Control();
 80007ba:	e7e1      	b.n	8000780 <main+0x84>
 80007bc:	20000023 	.word	0x20000023

080007c0 <EXTI0_IRQHandler>:
	}
}

//External Peripherals
void	EXTI0_IRQHandler(void)
{
 80007c0:	b580      	push	{r7, lr}
 80007c2:	af00      	add	r7, sp, #0
	EXTI0_CallBack(); // Ahmed();
 80007c4:	4b02      	ldr	r3, [pc, #8]	; (80007d0 <EXTI0_IRQHandler+0x10>)
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	4798      	blx	r3
}
 80007ca:	bf00      	nop
 80007cc:	bd80      	pop	{r7, pc}
 80007ce:	bf00      	nop
 80007d0:	20000024 	.word	0x20000024

080007d4 <H_LCD_void_Init>:

#include "LCD_priv.h"
#include "LCD_config.h"
#include "LCD_int.h"
void H_LCD_void_Init(void)
{
 80007d4:	b580      	push	{r7, lr}
 80007d6:	af00      	add	r7, sp, #0

	// set direction Rs, EN
	M_GPIO_void_SetPinDir(LCD_RS_PORT, LCD_RS_PIN,OUT_2MHZ_PP);
 80007d8:	2202      	movs	r2, #2
 80007da:	2101      	movs	r1, #1
 80007dc:	2000      	movs	r0, #0
 80007de:	f7ff fd61 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_EN_PORT,LCD_EN_PIN,OUT_2MHZ_PP);
 80007e2:	2202      	movs	r2, #2
 80007e4:	2102      	movs	r1, #2
 80007e6:	2000      	movs	r0, #0
 80007e8:	f7ff fd5c 	bl	80002a4 <M_GPIO_void_SetPinDir>
	//set direction D4 .. D7
	M_GPIO_void_SetPinDir(LCD_D7_PORT,LCD_D7_PIN,OUT_2MHZ_PP);
 80007ec:	2202      	movs	r2, #2
 80007ee:	2106      	movs	r1, #6
 80007f0:	2000      	movs	r0, #0
 80007f2:	f7ff fd57 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_D6_PORT,LCD_D6_PIN,OUT_2MHZ_PP);
 80007f6:	2202      	movs	r2, #2
 80007f8:	2105      	movs	r1, #5
 80007fa:	2000      	movs	r0, #0
 80007fc:	f7ff fd52 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_D5_PORT,LCD_D5_PIN,OUT_2MHZ_PP);
 8000800:	2202      	movs	r2, #2
 8000802:	2104      	movs	r1, #4
 8000804:	2000      	movs	r0, #0
 8000806:	f7ff fd4d 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(LCD_D4_PORT,LCD_D4_PIN,OUT_2MHZ_PP);
 800080a:	2202      	movs	r2, #2
 800080c:	2103      	movs	r1, #3
 800080e:	2000      	movs	r0, #0
 8000810:	f7ff fd48 	bl	80002a4 <M_GPIO_void_SetPinDir>
	// send Init Sequence
#if(LCD_MODE  == LCD_8BIT_MODE_)
	_delay_ms(35);
	H_LCD_void_sendCommand(LCD_8BIT_MODE_2LINES_5X7);
#elif(LCD_MODE ==  LCD_4BIT_MODE_)
	_delay_ms(35);
 8000814:	2023      	movs	r0, #35	; 0x23
 8000816:	f7ff fcab 	bl	8000170 <_delay_ms>
	// Rs = command = 0
	M_GPIO_void_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,LOW);
 800081a:	2200      	movs	r2, #0
 800081c:	2101      	movs	r1, #1
 800081e:	2000      	movs	r0, #0
 8000820:	f7ff fe16 	bl	8000450 <M_GPIO_void_SetPinValue>
	// EN = 0 disabled
	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
 8000824:	2200      	movs	r2, #0
 8000826:	2102      	movs	r1, #2
 8000828:	2000      	movs	r0, #0
 800082a:	f7ff fe11 	bl	8000450 <M_GPIO_void_SetPinValue>
	// prepare data
	M_GPIO_void_SetPinValue(LCD_D7_PORT,LCD_D7_PIN,0);
 800082e:	2200      	movs	r2, #0
 8000830:	2106      	movs	r1, #6
 8000832:	2000      	movs	r0, #0
 8000834:	f7ff fe0c 	bl	8000450 <M_GPIO_void_SetPinValue>
	M_GPIO_void_SetPinValue(LCD_D6_PORT,LCD_D6_PIN,0);
 8000838:	2200      	movs	r2, #0
 800083a:	2105      	movs	r1, #5
 800083c:	2000      	movs	r0, #0
 800083e:	f7ff fe07 	bl	8000450 <M_GPIO_void_SetPinValue>
	M_GPIO_void_SetPinValue(LCD_D5_PORT,LCD_D5_PIN,1);
 8000842:	2201      	movs	r2, #1
 8000844:	2104      	movs	r1, #4
 8000846:	2000      	movs	r0, #0
 8000848:	f7ff fe02 	bl	8000450 <M_GPIO_void_SetPinValue>
	M_GPIO_void_SetPinValue(LCD_D4_PORT,LCD_D4_PIN,0);
 800084c:	2200      	movs	r2, #0
 800084e:	2103      	movs	r1, #3
 8000850:	2000      	movs	r0, #0
 8000852:	f7ff fdfd 	bl	8000450 <M_GPIO_void_SetPinValue>
	//EN = 1
	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
 8000856:	2201      	movs	r2, #1
 8000858:	2102      	movs	r1, #2
 800085a:	2000      	movs	r0, #0
 800085c:	f7ff fdf8 	bl	8000450 <M_GPIO_void_SetPinValue>
	// delay 1 msec (to allow latching)
	_delay_ms(1);
 8000860:	2001      	movs	r0, #1
 8000862:	f7ff fc85 	bl	8000170 <_delay_ms>
	// EN = 0
	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
 8000866:	2200      	movs	r2, #0
 8000868:	2102      	movs	r1, #2
 800086a:	2000      	movs	r0, #0
 800086c:	f7ff fdf0 	bl	8000450 <M_GPIO_void_SetPinValue>
	// delay to allow processing
	_delay_ms(5);
 8000870:	2005      	movs	r0, #5
 8000872:	f7ff fc7d 	bl	8000170 <_delay_ms>
	H_LCD_void_sendCommand(LCD_4BIT_MODE_2LINES_5X7);
 8000876:	2028      	movs	r0, #40	; 0x28
 8000878:	f000 f80b 	bl	8000892 <H_LCD_void_sendCommand>
#else
  #error("wrong LCD Mode")
#endif
	// display ON/OFF
	H_LCD_void_sendCommand(LCD_DISPON_CURSON_BLINKOFF);
 800087c:	200e      	movs	r0, #14
 800087e:	f000 f808 	bl	8000892 <H_LCD_void_sendCommand>
	// display Clear
	H_LCD_void_sendCommand(LCD_CLEAR_DISPALY);
 8000882:	2001      	movs	r0, #1
 8000884:	f000 f805 	bl	8000892 <H_LCD_void_sendCommand>
	// Entry Mode Set
	H_LCD_void_sendCommand(LCD_ENTRY_MODE_SET);
 8000888:	2006      	movs	r0, #6
 800088a:	f000 f802 	bl	8000892 <H_LCD_void_sendCommand>

}
 800088e:	bf00      	nop
 8000890:	bd80      	pop	{r7, pc}

08000892 <H_LCD_void_sendCommand>:
	M_GPIO_void_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,HIGH);
  // step 2 : write data
   H_LCD_void_writeNlatch(copy_u8data);
}
void H_LCD_void_sendCommand(u8 copy_u8Command)
{
 8000892:	b580      	push	{r7, lr}
 8000894:	b082      	sub	sp, #8
 8000896:	af00      	add	r7, sp, #0
 8000898:	4603      	mov	r3, r0
 800089a:	71fb      	strb	r3, [r7, #7]
	// step 1 : select RS to be in command mode (RS = 0)
	M_GPIO_void_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,LOW);
 800089c:	2200      	movs	r2, #0
 800089e:	2101      	movs	r1, #1
 80008a0:	2000      	movs	r0, #0
 80008a2:	f7ff fdd5 	bl	8000450 <M_GPIO_void_SetPinValue>
	// step 2 : write command
	H_LCD_void_writeNlatch(copy_u8Command);
 80008a6:	79fb      	ldrb	r3, [r7, #7]
 80008a8:	4618      	mov	r0, r3
 80008aa:	f000 f804 	bl	80008b6 <H_LCD_void_writeNlatch>

}
 80008ae:	bf00      	nop
 80008b0:	3708      	adds	r7, #8
 80008b2:	46bd      	mov	sp, r7
 80008b4:	bd80      	pop	{r7, pc}

080008b6 <H_LCD_void_writeNlatch>:
void H_LCD_void_displayCustomChar(u8 copy_u8charCode)
{

}
static void H_LCD_void_writeNlatch(u8 copy_u8Byte)
{
 80008b6:	b580      	push	{r7, lr}
 80008b8:	b082      	sub	sp, #8
 80008ba:	af00      	add	r7, sp, #0
 80008bc:	4603      	mov	r3, r0
 80008be:	71fb      	strb	r3, [r7, #7]
 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,LOW);
  // step 5 : delay to allow LCD to process
 	_delay_ms(5);
#elif(LCD_MODE ==  LCD_4BIT_MODE_)
 	// EN = 0 disabled
 	M_GPIO_void_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
 80008c0:	2200      	movs	r2, #0
 80008c2:	2102      	movs	r1, #2
 80008c4:	2000      	movs	r0, #0
 80008c6:	f7ff fdc3 	bl	8000450 <M_GPIO_void_SetPinValue>
 	// devide Byte to 2 (4 bits )
 	// step 1 :send high order bits on pins (D7 .. D4)
 	M_GPIO_void_SetPinValue(LCD_D4_PORT ,LCD_D4_PIN  , GET_BIT(copy_u8Byte,4));
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	091b      	lsrs	r3, r3, #4
 80008ce:	b2db      	uxtb	r3, r3
 80008d0:	f003 0301 	and.w	r3, r3, #1
 80008d4:	b2db      	uxtb	r3, r3
 80008d6:	461a      	mov	r2, r3
 80008d8:	2103      	movs	r1, #3
 80008da:	2000      	movs	r0, #0
 80008dc:	f7ff fdb8 	bl	8000450 <M_GPIO_void_SetPinValue>
 	M_GPIO_void_SetPinValue(LCD_D5_PORT ,LCD_D5_PIN  , GET_BIT(copy_u8Byte,5));
 80008e0:	79fb      	ldrb	r3, [r7, #7]
 80008e2:	095b      	lsrs	r3, r3, #5
 80008e4:	b2db      	uxtb	r3, r3
 80008e6:	f003 0301 	and.w	r3, r3, #1
 80008ea:	b2db      	uxtb	r3, r3
 80008ec:	461a      	mov	r2, r3
 80008ee:	2104      	movs	r1, #4
 80008f0:	2000      	movs	r0, #0
 80008f2:	f7ff fdad 	bl	8000450 <M_GPIO_void_SetPinValue>
 	M_GPIO_void_SetPinValue(LCD_D6_PORT ,LCD_D6_PIN  , GET_BIT(copy_u8Byte,6));
 80008f6:	79fb      	ldrb	r3, [r7, #7]
 80008f8:	099b      	lsrs	r3, r3, #6
 80008fa:	b2db      	uxtb	r3, r3
 80008fc:	f003 0301 	and.w	r3, r3, #1
 8000900:	b2db      	uxtb	r3, r3
 8000902:	461a      	mov	r2, r3
 8000904:	2105      	movs	r1, #5
 8000906:	2000      	movs	r0, #0
 8000908:	f7ff fda2 	bl	8000450 <M_GPIO_void_SetPinValue>
 	M_GPIO_void_SetPinValue(LCD_D7_PORT ,LCD_D7_PIN  , GET_BIT(copy_u8Byte,7));
 800090c:	79fb      	ldrb	r3, [r7, #7]
 800090e:	09db      	lsrs	r3, r3, #7
 8000910:	b2db      	uxtb	r3, r3
 8000912:	461a      	mov	r2, r3
 8000914:	2106      	movs	r1, #6
 8000916:	2000      	movs	r0, #0
 8000918:	f7ff fd9a 	bl	8000450 <M_GPIO_void_SetPinValue>
 	  //step 2 : Activate Enable ,( E = 1)
 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,HIGH);
 800091c:	2201      	movs	r2, #1
 800091e:	2102      	movs	r1, #2
 8000920:	2000      	movs	r0, #0
 8000922:	f7ff fd95 	bl	8000450 <M_GPIO_void_SetPinValue>
 	  // step 3 : delay for 1 msec 	to allow latching
 	 	_delay_ms(1);
 8000926:	2001      	movs	r0, #1
 8000928:	f7ff fc22 	bl	8000170 <_delay_ms>
 	  // step 4 : deactivate Enable (E = 0)
 	 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,LOW);
 800092c:	2200      	movs	r2, #0
 800092e:	2102      	movs	r1, #2
 8000930:	2000      	movs	r0, #0
 8000932:	f7ff fd8d 	bl	8000450 <M_GPIO_void_SetPinValue>
 	  // step 5 : delay to allow LCD to process
 	 	_delay_ms(5);
 8000936:	2005      	movs	r0, #5
 8000938:	f7ff fc1a 	bl	8000170 <_delay_ms>
 	 	// step 6 :send Low order bits on pins (D7 .. D4)
 	 	M_GPIO_void_SetPinValue(LCD_D4_PORT ,LCD_D4_PIN  , GET_BIT(copy_u8Byte,0));
 800093c:	79fb      	ldrb	r3, [r7, #7]
 800093e:	f003 0301 	and.w	r3, r3, #1
 8000942:	b2db      	uxtb	r3, r3
 8000944:	461a      	mov	r2, r3
 8000946:	2103      	movs	r1, #3
 8000948:	2000      	movs	r0, #0
 800094a:	f7ff fd81 	bl	8000450 <M_GPIO_void_SetPinValue>
 	 	M_GPIO_void_SetPinValue(LCD_D5_PORT ,LCD_D5_PIN  , GET_BIT(copy_u8Byte,1));
 800094e:	79fb      	ldrb	r3, [r7, #7]
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	b2db      	uxtb	r3, r3
 8000954:	f003 0301 	and.w	r3, r3, #1
 8000958:	b2db      	uxtb	r3, r3
 800095a:	461a      	mov	r2, r3
 800095c:	2104      	movs	r1, #4
 800095e:	2000      	movs	r0, #0
 8000960:	f7ff fd76 	bl	8000450 <M_GPIO_void_SetPinValue>
 	 	M_GPIO_void_SetPinValue(LCD_D6_PORT ,LCD_D6_PIN  , GET_BIT(copy_u8Byte,2));
 8000964:	79fb      	ldrb	r3, [r7, #7]
 8000966:	089b      	lsrs	r3, r3, #2
 8000968:	b2db      	uxtb	r3, r3
 800096a:	f003 0301 	and.w	r3, r3, #1
 800096e:	b2db      	uxtb	r3, r3
 8000970:	461a      	mov	r2, r3
 8000972:	2105      	movs	r1, #5
 8000974:	2000      	movs	r0, #0
 8000976:	f7ff fd6b 	bl	8000450 <M_GPIO_void_SetPinValue>
 	 	M_GPIO_void_SetPinValue(LCD_D7_PORT ,LCD_D7_PIN  , GET_BIT(copy_u8Byte,3));
 800097a:	79fb      	ldrb	r3, [r7, #7]
 800097c:	08db      	lsrs	r3, r3, #3
 800097e:	b2db      	uxtb	r3, r3
 8000980:	f003 0301 	and.w	r3, r3, #1
 8000984:	b2db      	uxtb	r3, r3
 8000986:	461a      	mov	r2, r3
 8000988:	2106      	movs	r1, #6
 800098a:	2000      	movs	r0, #0
 800098c:	f7ff fd60 	bl	8000450 <M_GPIO_void_SetPinValue>
 	 	 //step 7 : Activate Enable ,( E = 1)
 	 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,HIGH);
 8000990:	2201      	movs	r2, #1
 8000992:	2102      	movs	r1, #2
 8000994:	2000      	movs	r0, #0
 8000996:	f7ff fd5b 	bl	8000450 <M_GPIO_void_SetPinValue>
 	 	 // step 8 : delay for 1 msec 	to allow latching
 	 	_delay_ms(1);
 800099a:	2001      	movs	r0, #1
 800099c:	f7ff fbe8 	bl	8000170 <_delay_ms>
 	 	 // step 9 : deactivate Enable (E = 0)
 	 	M_GPIO_void_SetPinValue(LCD_EN_PORT, LCD_EN_PIN,LOW);
 80009a0:	2200      	movs	r2, #0
 80009a2:	2102      	movs	r1, #2
 80009a4:	2000      	movs	r0, #0
 80009a6:	f7ff fd53 	bl	8000450 <M_GPIO_void_SetPinValue>
 	 	 // step 10 : delay to allow LCD to process
 	 	_delay_ms(5);
 80009aa:	2005      	movs	r0, #5
 80009ac:	f7ff fbe0 	bl	8000170 <_delay_ms>
#else
  #error("Wrong LCD mode")
#endif

}
 80009b0:	bf00      	nop
 80009b2:	3708      	adds	r7, #8
 80009b4:	46bd      	mov	sp, r7
 80009b6:	bd80      	pop	{r7, pc}

080009b8 <EXTI1_IRQHandler>:
	}
}

//External Peripherals
void	EXTI1_IRQHandler(void)
{
 80009b8:	b580      	push	{r7, lr}
 80009ba:	af00      	add	r7, sp, #0
	EXTI1_CallBack();
 80009bc:	4b02      	ldr	r3, [pc, #8]	; (80009c8 <EXTI1_IRQHandler+0x10>)
 80009be:	681b      	ldr	r3, [r3, #0]
 80009c0:	4798      	blx	r3
}
 80009c2:	bf00      	nop
 80009c4:	bd80      	pop	{r7, pc}
 80009c6:	bf00      	nop
 80009c8:	20000028 	.word	0x20000028

080009cc <PB_void_Init>:

#include  "DIO_int.h"
#include  "RCC_interface.h"
#include  "PB_int.h"
#include  "ELC_Heater.h"
void PB_void_Init(){
 80009cc:	b580      	push	{r7, lr}
 80009ce:	af00      	add	r7, sp, #0

	M_GPIO_void_SetPinDir(INCREASE_BUTTON_PORT,INCREASE_BUTTON_PIN,IN_PULL_UP_DOWN);
 80009d0:	2208      	movs	r2, #8
 80009d2:	210c      	movs	r1, #12
 80009d4:	2000      	movs	r0, #0
 80009d6:	f7ff fc65 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinValue(INCREASE_BUTTON_PORT,INCREASE_BUTTON_PIN, HIGH);
 80009da:	2201      	movs	r2, #1
 80009dc:	210c      	movs	r1, #12
 80009de:	2000      	movs	r0, #0
 80009e0:	f7ff fd36 	bl	8000450 <M_GPIO_void_SetPinValue>

	M_GPIO_void_SetPinDir(DECREASE_BUTTON_PORT,DECREASE_BUTTON_PIN,IN_PULL_UP_DOWN);
 80009e4:	2208      	movs	r2, #8
 80009e6:	210f      	movs	r1, #15
 80009e8:	2000      	movs	r0, #0
 80009ea:	f7ff fc5b 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinValue(DECREASE_BUTTON_PORT,DECREASE_BUTTON_PIN, HIGH);
 80009ee:	2201      	movs	r2, #1
 80009f0:	210f      	movs	r1, #15
 80009f2:	2000      	movs	r0, #0
 80009f4:	f7ff fd2c 	bl	8000450 <M_GPIO_void_SetPinValue>

	M_GPIO_void_SetPinDir(ON_OFF_BUTTON_PORT,ON_OFF_BUTTON_PIN,IN_PULL_UP_DOWN);
 80009f8:	2208      	movs	r2, #8
 80009fa:	2106      	movs	r1, #6
 80009fc:	2001      	movs	r0, #1
 80009fe:	f7ff fc51 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinValue(ON_OFF_BUTTON_PORT,ON_OFF_BUTTON_PORT, HIGH);
 8000a02:	2201      	movs	r2, #1
 8000a04:	2101      	movs	r1, #1
 8000a06:	2001      	movs	r0, #1
 8000a08:	f7ff fd22 	bl	8000450 <M_GPIO_void_SetPinValue>


}
 8000a0c:	bf00      	nop
 8000a0e:	bd80      	pop	{r7, pc}

08000a10 <MRCC_voidSysClkInit>:




void	MRCC_voidSysClkInit(void)
{
 8000a10:	b480      	push	{r7}
 8000a12:	af00      	add	r7, sp, #0
	#if			SYSTEM_CLK	==	RCC_HSI
				SET_BIT(RCC_CR,0);
 8000a14:	4b0a      	ldr	r3, [pc, #40]	; (8000a40 <MRCC_voidSysClkInit+0x30>)
 8000a16:	681b      	ldr	r3, [r3, #0]
 8000a18:	4a09      	ldr	r2, [pc, #36]	; (8000a40 <MRCC_voidSysClkInit+0x30>)
 8000a1a:	f043 0301 	orr.w	r3, r3, #1
 8000a1e:	6013      	str	r3, [r2, #0]
				CLR_BIT(RCC_CFGR,0);
 8000a20:	4b08      	ldr	r3, [pc, #32]	; (8000a44 <MRCC_voidSysClkInit+0x34>)
 8000a22:	681b      	ldr	r3, [r3, #0]
 8000a24:	4a07      	ldr	r2, [pc, #28]	; (8000a44 <MRCC_voidSysClkInit+0x34>)
 8000a26:	f023 0301 	bic.w	r3, r3, #1
 8000a2a:	6013      	str	r3, [r2, #0]
				CLR_BIT(RCC_CFGR,1);
 8000a2c:	4b05      	ldr	r3, [pc, #20]	; (8000a44 <MRCC_voidSysClkInit+0x34>)
 8000a2e:	681b      	ldr	r3, [r3, #0]
 8000a30:	4a04      	ldr	r2, [pc, #16]	; (8000a44 <MRCC_voidSysClkInit+0x34>)
 8000a32:	f023 0302 	bic.w	r3, r3, #2
 8000a36:	6013      	str	r3, [r2, #0]
				CLR_BIT(RCC_CFGR,0);
				SET_BIT(RCC_CFGR,1);
	#else
		#error	"Wrong choice of RCC clock type"
	#endif
}
 8000a38:	bf00      	nop
 8000a3a:	46bd      	mov	sp, r7
 8000a3c:	bc80      	pop	{r7}
 8000a3e:	4770      	bx	lr
 8000a40:	40021000 	.word	0x40021000
 8000a44:	40021004 	.word	0x40021004

08000a48 <MRCC_voidEnablePerClk>:
void	MRCC_voidEnablePerClk(u8 PerBus,u8 PerNum)
{
 8000a48:	b480      	push	{r7}
 8000a4a:	b083      	sub	sp, #12
 8000a4c:	af00      	add	r7, sp, #0
 8000a4e:	4603      	mov	r3, r0
 8000a50:	460a      	mov	r2, r1
 8000a52:	71fb      	strb	r3, [r7, #7]
 8000a54:	4613      	mov	r3, r2
 8000a56:	71bb      	strb	r3, [r7, #6]
	/*	Range Check						*/
	if(PerNum<32)
 8000a58:	79bb      	ldrb	r3, [r7, #6]
 8000a5a:	2b1f      	cmp	r3, #31
 8000a5c:	d82a      	bhi.n	8000ab4 <MRCC_voidEnablePerClk+0x6c>
	{
		switch(PerBus)
 8000a5e:	79fb      	ldrb	r3, [r7, #7]
 8000a60:	2b02      	cmp	r3, #2
 8000a62:	d01c      	beq.n	8000a9e <MRCC_voidEnablePerClk+0x56>
 8000a64:	2b02      	cmp	r3, #2
 8000a66:	dc25      	bgt.n	8000ab4 <MRCC_voidEnablePerClk+0x6c>
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	d002      	beq.n	8000a72 <MRCC_voidEnablePerClk+0x2a>
 8000a6c:	2b01      	cmp	r3, #1
 8000a6e:	d00b      	beq.n	8000a88 <MRCC_voidEnablePerClk+0x40>
			case RCC_APB2	:	SET_BIT(RCC_APB2ENR,PerNum);	break;
		}
	}
	else
	{/*		Report Error 			*/}	
}
 8000a70:	e020      	b.n	8000ab4 <MRCC_voidEnablePerClk+0x6c>
			case RCC_AHB	:	SET_BIT(RCC_AHBENR ,PerNum);	break;
 8000a72:	4b13      	ldr	r3, [pc, #76]	; (8000ac0 <MRCC_voidEnablePerClk+0x78>)
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	79ba      	ldrb	r2, [r7, #6]
 8000a78:	2101      	movs	r1, #1
 8000a7a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a7e:	4611      	mov	r1, r2
 8000a80:	4a0f      	ldr	r2, [pc, #60]	; (8000ac0 <MRCC_voidEnablePerClk+0x78>)
 8000a82:	430b      	orrs	r3, r1
 8000a84:	6013      	str	r3, [r2, #0]
 8000a86:	e015      	b.n	8000ab4 <MRCC_voidEnablePerClk+0x6c>
			case RCC_APB1	:	SET_BIT(RCC_APB1ENR,PerNum);	break;
 8000a88:	4b0e      	ldr	r3, [pc, #56]	; (8000ac4 <MRCC_voidEnablePerClk+0x7c>)
 8000a8a:	681b      	ldr	r3, [r3, #0]
 8000a8c:	79ba      	ldrb	r2, [r7, #6]
 8000a8e:	2101      	movs	r1, #1
 8000a90:	fa01 f202 	lsl.w	r2, r1, r2
 8000a94:	4611      	mov	r1, r2
 8000a96:	4a0b      	ldr	r2, [pc, #44]	; (8000ac4 <MRCC_voidEnablePerClk+0x7c>)
 8000a98:	430b      	orrs	r3, r1
 8000a9a:	6013      	str	r3, [r2, #0]
 8000a9c:	e00a      	b.n	8000ab4 <MRCC_voidEnablePerClk+0x6c>
			case RCC_APB2	:	SET_BIT(RCC_APB2ENR,PerNum);	break;
 8000a9e:	4b0a      	ldr	r3, [pc, #40]	; (8000ac8 <MRCC_voidEnablePerClk+0x80>)
 8000aa0:	681b      	ldr	r3, [r3, #0]
 8000aa2:	79ba      	ldrb	r2, [r7, #6]
 8000aa4:	2101      	movs	r1, #1
 8000aa6:	fa01 f202 	lsl.w	r2, r1, r2
 8000aaa:	4611      	mov	r1, r2
 8000aac:	4a06      	ldr	r2, [pc, #24]	; (8000ac8 <MRCC_voidEnablePerClk+0x80>)
 8000aae:	430b      	orrs	r3, r1
 8000ab0:	6013      	str	r3, [r2, #0]
 8000ab2:	bf00      	nop
}
 8000ab4:	bf00      	nop
 8000ab6:	370c      	adds	r7, #12
 8000ab8:	46bd      	mov	sp, r7
 8000aba:	bc80      	pop	{r7}
 8000abc:	4770      	bx	lr
 8000abe:	bf00      	nop
 8000ac0:	40021014 	.word	0x40021014
 8000ac4:	4002101c 	.word	0x4002101c
 8000ac8:	40021018 	.word	0x40021018

08000acc <MRCC_voidSetADCPre>:
	else
	{/*		Report Error 			*/}
}

void	MRCC_voidSetADCPre(u8 Copy_u8Pre)
{
 8000acc:	b480      	push	{r7}
 8000ace:	b083      	sub	sp, #12
 8000ad0:	af00      	add	r7, sp, #0
 8000ad2:	4603      	mov	r3, r0
 8000ad4:	71fb      	strb	r3, [r7, #7]
	if(Copy_u8Pre <= RCC_ADC_PRE_8)
 8000ad6:	79fb      	ldrb	r3, [r7, #7]
 8000ad8:	2b03      	cmp	r3, #3
 8000ada:	d813      	bhi.n	8000b04 <MRCC_voidSetADCPre+0x38>
	{
		CLR_BIT(RCC_CFGR , 14);
 8000adc:	4b0c      	ldr	r3, [pc, #48]	; (8000b10 <MRCC_voidSetADCPre+0x44>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	4a0b      	ldr	r2, [pc, #44]	; (8000b10 <MRCC_voidSetADCPre+0x44>)
 8000ae2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000ae6:	6013      	str	r3, [r2, #0]
		CLR_BIT(RCC_CFGR , 15);
 8000ae8:	4b09      	ldr	r3, [pc, #36]	; (8000b10 <MRCC_voidSetADCPre+0x44>)
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	4a08      	ldr	r2, [pc, #32]	; (8000b10 <MRCC_voidSetADCPre+0x44>)
 8000aee:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000af2:	6013      	str	r3, [r2, #0]
		RCC_CFGR |=  Copy_u8Pre << 14;
 8000af4:	4b06      	ldr	r3, [pc, #24]	; (8000b10 <MRCC_voidSetADCPre+0x44>)
 8000af6:	681b      	ldr	r3, [r3, #0]
 8000af8:	79fa      	ldrb	r2, [r7, #7]
 8000afa:	0392      	lsls	r2, r2, #14
 8000afc:	4611      	mov	r1, r2
 8000afe:	4a04      	ldr	r2, [pc, #16]	; (8000b10 <MRCC_voidSetADCPre+0x44>)
 8000b00:	430b      	orrs	r3, r1
 8000b02:	6013      	str	r3, [r2, #0]
	}
}
 8000b04:	bf00      	nop
 8000b06:	370c      	adds	r7, #12
 8000b08:	46bd      	mov	sp, r7
 8000b0a:	bc80      	pop	{r7}
 8000b0c:	4770      	bx	lr
 8000b0e:	bf00      	nop
 8000b10:	40021004 	.word	0x40021004

08000b14 <H_SSD_void_init>:
	{
		asm("NOP");
	}
}*/
void H_SSD_void_init(void)
{
 8000b14:	b580      	push	{r7, lr}
 8000b16:	af00      	add	r7, sp, #0
	M_GPIO_void_SetPinDir(SSD_LED_A_PORT,  SSD_LED_A_PIN ,OUT_2MHZ_PP);
 8000b18:	2202      	movs	r2, #2
 8000b1a:	2101      	movs	r1, #1
 8000b1c:	2000      	movs	r0, #0
 8000b1e:	f7ff fbc1 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_B_PORT,  SSD_LED_B_PIN ,OUT_2MHZ_PP);
 8000b22:	2202      	movs	r2, #2
 8000b24:	2102      	movs	r1, #2
 8000b26:	2000      	movs	r0, #0
 8000b28:	f7ff fbbc 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_C_PORT,  SSD_LED_C_PIN ,OUT_2MHZ_PP);
 8000b2c:	2202      	movs	r2, #2
 8000b2e:	2103      	movs	r1, #3
 8000b30:	2000      	movs	r0, #0
 8000b32:	f7ff fbb7 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_D_PORT,  SSD_LED_D_PIN ,OUT_2MHZ_PP);
 8000b36:	2202      	movs	r2, #2
 8000b38:	2104      	movs	r1, #4
 8000b3a:	2000      	movs	r0, #0
 8000b3c:	f7ff fbb2 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_E_PORT,  SSD_LED_E_PIN ,OUT_2MHZ_PP);
 8000b40:	2202      	movs	r2, #2
 8000b42:	2105      	movs	r1, #5
 8000b44:	2000      	movs	r0, #0
 8000b46:	f7ff fbad 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_F_PORT,  SSD_LED_F_PIN ,OUT_2MHZ_PP);
 8000b4a:	2202      	movs	r2, #2
 8000b4c:	2106      	movs	r1, #6
 8000b4e:	2000      	movs	r0, #0
 8000b50:	f7ff fba8 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_G_PORT,  SSD_LED_G_PIN ,OUT_2MHZ_PP);
 8000b54:	2202      	movs	r2, #2
 8000b56:	2107      	movs	r1, #7
 8000b58:	2000      	movs	r0, #0
 8000b5a:	f7ff fba3 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_LED_DOT_PORT,  SSD_LED_DOT_PIN ,OUT_2MHZ_PP);
 8000b5e:	2202      	movs	r2, #2
 8000b60:	2108      	movs	r1, #8
 8000b62:	2000      	movs	r0, #0
 8000b64:	f7ff fb9e 	bl	80002a4 <M_GPIO_void_SetPinDir>

	//ENABLE DIGITS 1

	M_GPIO_void_SetPinDir(SSD_DIG_1_EN_PORT,  SSD_DIG_1_EN_PIN ,OUT_2MHZ_PP);
 8000b68:	2202      	movs	r2, #2
 8000b6a:	2109      	movs	r1, #9
 8000b6c:	2000      	movs	r0, #0
 8000b6e:	f7ff fb99 	bl	80002a4 <M_GPIO_void_SetPinDir>
	M_GPIO_void_SetPinDir(SSD_DIG_2_EN_PORT,  SSD_DIG_2_EN_PIN , OUT_2MHZ_PP);
 8000b72:	2202      	movs	r2, #2
 8000b74:	210a      	movs	r1, #10
 8000b76:	2000      	movs	r0, #0
 8000b78:	f7ff fb94 	bl	80002a4 <M_GPIO_void_SetPinDir>

	M_GPIO_void_SetPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,LOW);
 8000b7c:	2200      	movs	r2, #0
 8000b7e:	2109      	movs	r1, #9
 8000b80:	2000      	movs	r0, #0
 8000b82:	f7ff fc65 	bl	8000450 <M_GPIO_void_SetPinValue>
	M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
 8000b86:	2200      	movs	r2, #0
 8000b88:	210a      	movs	r1, #10
 8000b8a:	2000      	movs	r0, #0
 8000b8c:	f7ff fc60 	bl	8000450 <M_GPIO_void_SetPinValue>
}
 8000b90:	bf00      	nop
 8000b92:	bd80      	pop	{r7, pc}

08000b94 <H_SSD_void_DisplayNumber>:

	M_GPIO_void_SetPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,LOW);
	M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
}
void H_SSD_void_DisplayNumber(u8 number)
{
 8000b94:	b580      	push	{r7, lr}
 8000b96:	b084      	sub	sp, #16
 8000b98:	af00      	add	r7, sp, #0
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	71fb      	strb	r3, [r7, #7]
	if(number>99)
 8000b9e:	79fb      	ldrb	r3, [r7, #7]
 8000ba0:	2b63      	cmp	r3, #99	; 0x63
 8000ba2:	f200 83a8 	bhi.w	80012f6 <H_SSD_void_DisplayNumber+0x762>
	{
		return;
	}
	u32 i ;
	u8 units =number % 10;
 8000ba6:	79fa      	ldrb	r2, [r7, #7]
 8000ba8:	4bcf      	ldr	r3, [pc, #828]	; (8000ee8 <H_SSD_void_DisplayNumber+0x354>)
 8000baa:	fba3 1302 	umull	r1, r3, r3, r2
 8000bae:	08d9      	lsrs	r1, r3, #3
 8000bb0:	460b      	mov	r3, r1
 8000bb2:	009b      	lsls	r3, r3, #2
 8000bb4:	440b      	add	r3, r1
 8000bb6:	005b      	lsls	r3, r3, #1
 8000bb8:	1ad3      	subs	r3, r2, r3
 8000bba:	72fb      	strb	r3, [r7, #11]
	u8 tens = number/10;
 8000bbc:	79fb      	ldrb	r3, [r7, #7]
 8000bbe:	4aca      	ldr	r2, [pc, #808]	; (8000ee8 <H_SSD_void_DisplayNumber+0x354>)
 8000bc0:	fba2 2303 	umull	r2, r3, r2, r3
 8000bc4:	08db      	lsrs	r3, r3, #3
 8000bc6:	72bb      	strb	r3, [r7, #10]
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
 8000bc8:	2300      	movs	r3, #0
 8000bca:	60fb      	str	r3, [r7, #12]
 8000bcc:	e38e      	b.n	80012ec <H_SSD_void_DisplayNumber+0x758>

		switch (units)
 8000bce:	7afb      	ldrb	r3, [r7, #11]
 8000bd0:	2b09      	cmp	r3, #9
 8000bd2:	f200 81b4 	bhi.w	8000f3e <H_SSD_void_DisplayNumber+0x3aa>
 8000bd6:	a201      	add	r2, pc, #4	; (adr r2, 8000bdc <H_SSD_void_DisplayNumber+0x48>)
 8000bd8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000bdc:	08000c05 	.word	0x08000c05
 8000be0:	08000c57 	.word	0x08000c57
 8000be4:	08000ca9 	.word	0x08000ca9
 8000be8:	08000cfb 	.word	0x08000cfb
 8000bec:	08000d4d 	.word	0x08000d4d
 8000bf0:	08000d9f 	.word	0x08000d9f
 8000bf4:	08000df1 	.word	0x08000df1
 8000bf8:	08000e43 	.word	0x08000e43
 8000bfc:	08000e95 	.word	0x08000e95
 8000c00:	08000eed 	.word	0x08000eed
		{
		case 0:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000c04:	2201      	movs	r2, #1
 8000c06:	2101      	movs	r1, #1
 8000c08:	2000      	movs	r0, #0
 8000c0a:	f7ff fc21 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000c0e:	2201      	movs	r2, #1
 8000c10:	2102      	movs	r1, #2
 8000c12:	2000      	movs	r0, #0
 8000c14:	f7ff fc1c 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000c18:	2201      	movs	r2, #1
 8000c1a:	2103      	movs	r1, #3
 8000c1c:	2000      	movs	r0, #0
 8000c1e:	f7ff fc17 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000c22:	2201      	movs	r2, #1
 8000c24:	2104      	movs	r1, #4
 8000c26:	2000      	movs	r0, #0
 8000c28:	f7ff fc12 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000c2c:	2201      	movs	r2, #1
 8000c2e:	2105      	movs	r1, #5
 8000c30:	2000      	movs	r0, #0
 8000c32:	f7ff fc0d 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000c36:	2201      	movs	r2, #1
 8000c38:	2106      	movs	r1, #6
 8000c3a:	2000      	movs	r0, #0
 8000c3c:	f7ff fc08 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000c40:	2200      	movs	r2, #0
 8000c42:	2107      	movs	r1, #7
 8000c44:	2000      	movs	r0, #0
 8000c46:	f7ff fc03 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	2108      	movs	r1, #8
 8000c4e:	2000      	movs	r0, #0
 8000c50:	f7ff fbfe 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000c54:	e173      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>

		case 1:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 8000c56:	2200      	movs	r2, #0
 8000c58:	2101      	movs	r1, #1
 8000c5a:	2000      	movs	r0, #0
 8000c5c:	f7ff fbf8 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000c60:	2201      	movs	r2, #1
 8000c62:	2102      	movs	r1, #2
 8000c64:	2000      	movs	r0, #0
 8000c66:	f7ff fbf3 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000c6a:	2201      	movs	r2, #1
 8000c6c:	2103      	movs	r1, #3
 8000c6e:	2000      	movs	r0, #0
 8000c70:	f7ff fbee 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8000c74:	2200      	movs	r2, #0
 8000c76:	2104      	movs	r1, #4
 8000c78:	2000      	movs	r0, #0
 8000c7a:	f7ff fbe9 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000c7e:	2200      	movs	r2, #0
 8000c80:	2105      	movs	r1, #5
 8000c82:	2000      	movs	r0, #0
 8000c84:	f7ff fbe4 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000c88:	2200      	movs	r2, #0
 8000c8a:	2106      	movs	r1, #6
 8000c8c:	2000      	movs	r0, #0
 8000c8e:	f7ff fbdf 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000c92:	2200      	movs	r2, #0
 8000c94:	2107      	movs	r1, #7
 8000c96:	2000      	movs	r0, #0
 8000c98:	f7ff fbda 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	2108      	movs	r1, #8
 8000ca0:	2000      	movs	r0, #0
 8000ca2:	f7ff fbd5 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000ca6:	e14a      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>

		case 2:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000ca8:	2201      	movs	r2, #1
 8000caa:	2101      	movs	r1, #1
 8000cac:	2000      	movs	r0, #0
 8000cae:	f7ff fbcf 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000cb2:	2201      	movs	r2, #1
 8000cb4:	2102      	movs	r1, #2
 8000cb6:	2000      	movs	r0, #0
 8000cb8:	f7ff fbca 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	2103      	movs	r1, #3
 8000cc0:	2000      	movs	r0, #0
 8000cc2:	f7ff fbc5 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000cc6:	2201      	movs	r2, #1
 8000cc8:	2104      	movs	r1, #4
 8000cca:	2000      	movs	r0, #0
 8000ccc:	f7ff fbc0 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000cd0:	2201      	movs	r2, #1
 8000cd2:	2105      	movs	r1, #5
 8000cd4:	2000      	movs	r0, #0
 8000cd6:	f7ff fbbb 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000cda:	2200      	movs	r2, #0
 8000cdc:	2106      	movs	r1, #6
 8000cde:	2000      	movs	r0, #0
 8000ce0:	f7ff fbb6 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000ce4:	2201      	movs	r2, #1
 8000ce6:	2107      	movs	r1, #7
 8000ce8:	2000      	movs	r0, #0
 8000cea:	f7ff fbb1 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000cee:	2200      	movs	r2, #0
 8000cf0:	2108      	movs	r1, #8
 8000cf2:	2000      	movs	r0, #0
 8000cf4:	f7ff fbac 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000cf8:	e121      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>

		case 3:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000cfa:	2201      	movs	r2, #1
 8000cfc:	2101      	movs	r1, #1
 8000cfe:	2000      	movs	r0, #0
 8000d00:	f7ff fba6 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000d04:	2201      	movs	r2, #1
 8000d06:	2102      	movs	r1, #2
 8000d08:	2000      	movs	r0, #0
 8000d0a:	f7ff fba1 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000d0e:	2201      	movs	r2, #1
 8000d10:	2103      	movs	r1, #3
 8000d12:	2000      	movs	r0, #0
 8000d14:	f7ff fb9c 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000d18:	2201      	movs	r2, #1
 8000d1a:	2104      	movs	r1, #4
 8000d1c:	2000      	movs	r0, #0
 8000d1e:	f7ff fb97 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000d22:	2200      	movs	r2, #0
 8000d24:	2105      	movs	r1, #5
 8000d26:	2000      	movs	r0, #0
 8000d28:	f7ff fb92 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	2106      	movs	r1, #6
 8000d30:	2000      	movs	r0, #0
 8000d32:	f7ff fb8d 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000d36:	2201      	movs	r2, #1
 8000d38:	2107      	movs	r1, #7
 8000d3a:	2000      	movs	r0, #0
 8000d3c:	f7ff fb88 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000d40:	2200      	movs	r2, #0
 8000d42:	2108      	movs	r1, #8
 8000d44:	2000      	movs	r0, #0
 8000d46:	f7ff fb83 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000d4a:	e0f8      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>

		case 4:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 8000d4c:	2200      	movs	r2, #0
 8000d4e:	2101      	movs	r1, #1
 8000d50:	2000      	movs	r0, #0
 8000d52:	f7ff fb7d 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000d56:	2201      	movs	r2, #1
 8000d58:	2102      	movs	r1, #2
 8000d5a:	2000      	movs	r0, #0
 8000d5c:	f7ff fb78 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000d60:	2201      	movs	r2, #1
 8000d62:	2103      	movs	r1, #3
 8000d64:	2000      	movs	r0, #0
 8000d66:	f7ff fb73 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8000d6a:	2200      	movs	r2, #0
 8000d6c:	2104      	movs	r1, #4
 8000d6e:	2000      	movs	r0, #0
 8000d70:	f7ff fb6e 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000d74:	2200      	movs	r2, #0
 8000d76:	2105      	movs	r1, #5
 8000d78:	2000      	movs	r0, #0
 8000d7a:	f7ff fb69 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000d7e:	2201      	movs	r2, #1
 8000d80:	2106      	movs	r1, #6
 8000d82:	2000      	movs	r0, #0
 8000d84:	f7ff fb64 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000d88:	2201      	movs	r2, #1
 8000d8a:	2107      	movs	r1, #7
 8000d8c:	2000      	movs	r0, #0
 8000d8e:	f7ff fb5f 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000d92:	2200      	movs	r2, #0
 8000d94:	2108      	movs	r1, #8
 8000d96:	2000      	movs	r0, #0
 8000d98:	f7ff fb5a 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000d9c:	e0cf      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>

		case 5:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000d9e:	2201      	movs	r2, #1
 8000da0:	2101      	movs	r1, #1
 8000da2:	2000      	movs	r0, #0
 8000da4:	f7ff fb54 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 8000da8:	2200      	movs	r2, #0
 8000daa:	2102      	movs	r1, #2
 8000dac:	2000      	movs	r0, #0
 8000dae:	f7ff fb4f 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000db2:	2201      	movs	r2, #1
 8000db4:	2103      	movs	r1, #3
 8000db6:	2000      	movs	r0, #0
 8000db8:	f7ff fb4a 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000dbc:	2201      	movs	r2, #1
 8000dbe:	2104      	movs	r1, #4
 8000dc0:	2000      	movs	r0, #0
 8000dc2:	f7ff fb45 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000dc6:	2200      	movs	r2, #0
 8000dc8:	2105      	movs	r1, #5
 8000dca:	2000      	movs	r0, #0
 8000dcc:	f7ff fb40 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000dd0:	2201      	movs	r2, #1
 8000dd2:	2106      	movs	r1, #6
 8000dd4:	2000      	movs	r0, #0
 8000dd6:	f7ff fb3b 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000dda:	2201      	movs	r2, #1
 8000ddc:	2107      	movs	r1, #7
 8000dde:	2000      	movs	r0, #0
 8000de0:	f7ff fb36 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000de4:	2200      	movs	r2, #0
 8000de6:	2108      	movs	r1, #8
 8000de8:	2000      	movs	r0, #0
 8000dea:	f7ff fb31 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000dee:	e0a6      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>
		case 6:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000df0:	2201      	movs	r2, #1
 8000df2:	2101      	movs	r1, #1
 8000df4:	2000      	movs	r0, #0
 8000df6:	f7ff fb2b 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 8000dfa:	2200      	movs	r2, #0
 8000dfc:	2102      	movs	r1, #2
 8000dfe:	2000      	movs	r0, #0
 8000e00:	f7ff fb26 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000e04:	2201      	movs	r2, #1
 8000e06:	2103      	movs	r1, #3
 8000e08:	2000      	movs	r0, #0
 8000e0a:	f7ff fb21 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000e0e:	2201      	movs	r2, #1
 8000e10:	2104      	movs	r1, #4
 8000e12:	2000      	movs	r0, #0
 8000e14:	f7ff fb1c 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000e18:	2201      	movs	r2, #1
 8000e1a:	2105      	movs	r1, #5
 8000e1c:	2000      	movs	r0, #0
 8000e1e:	f7ff fb17 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000e22:	2201      	movs	r2, #1
 8000e24:	2106      	movs	r1, #6
 8000e26:	2000      	movs	r0, #0
 8000e28:	f7ff fb12 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000e2c:	2201      	movs	r2, #1
 8000e2e:	2107      	movs	r1, #7
 8000e30:	2000      	movs	r0, #0
 8000e32:	f7ff fb0d 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000e36:	2200      	movs	r2, #0
 8000e38:	2108      	movs	r1, #8
 8000e3a:	2000      	movs	r0, #0
 8000e3c:	f7ff fb08 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000e40:	e07d      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>
		case 7:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000e42:	2201      	movs	r2, #1
 8000e44:	2101      	movs	r1, #1
 8000e46:	2000      	movs	r0, #0
 8000e48:	f7ff fb02 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000e4c:	2201      	movs	r2, #1
 8000e4e:	2102      	movs	r1, #2
 8000e50:	2000      	movs	r0, #0
 8000e52:	f7ff fafd 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000e56:	2201      	movs	r2, #1
 8000e58:	2103      	movs	r1, #3
 8000e5a:	2000      	movs	r0, #0
 8000e5c:	f7ff faf8 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8000e60:	2200      	movs	r2, #0
 8000e62:	2104      	movs	r1, #4
 8000e64:	2000      	movs	r0, #0
 8000e66:	f7ff faf3 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	2105      	movs	r1, #5
 8000e6e:	2000      	movs	r0, #0
 8000e70:	f7ff faee 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8000e74:	2200      	movs	r2, #0
 8000e76:	2106      	movs	r1, #6
 8000e78:	2000      	movs	r0, #0
 8000e7a:	f7ff fae9 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000e7e:	2200      	movs	r2, #0
 8000e80:	2107      	movs	r1, #7
 8000e82:	2000      	movs	r0, #0
 8000e84:	f7ff fae4 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000e88:	2200      	movs	r2, #0
 8000e8a:	2108      	movs	r1, #8
 8000e8c:	2000      	movs	r0, #0
 8000e8e:	f7ff fadf 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000e92:	e054      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>
		case 8:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000e94:	2201      	movs	r2, #1
 8000e96:	2101      	movs	r1, #1
 8000e98:	2000      	movs	r0, #0
 8000e9a:	f7ff fad9 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000e9e:	2201      	movs	r2, #1
 8000ea0:	2102      	movs	r1, #2
 8000ea2:	2000      	movs	r0, #0
 8000ea4:	f7ff fad4 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000ea8:	2201      	movs	r2, #1
 8000eaa:	2103      	movs	r1, #3
 8000eac:	2000      	movs	r0, #0
 8000eae:	f7ff facf 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000eb2:	2201      	movs	r2, #1
 8000eb4:	2104      	movs	r1, #4
 8000eb6:	2000      	movs	r0, #0
 8000eb8:	f7ff faca 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000ebc:	2201      	movs	r2, #1
 8000ebe:	2105      	movs	r1, #5
 8000ec0:	2000      	movs	r0, #0
 8000ec2:	f7ff fac5 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000ec6:	2201      	movs	r2, #1
 8000ec8:	2106      	movs	r1, #6
 8000eca:	2000      	movs	r0, #0
 8000ecc:	f7ff fac0 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000ed0:	2201      	movs	r2, #1
 8000ed2:	2107      	movs	r1, #7
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	f7ff fabb 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000eda:	2200      	movs	r2, #0
 8000edc:	2108      	movs	r1, #8
 8000ede:	2000      	movs	r0, #0
 8000ee0:	f7ff fab6 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000ee4:	e02b      	b.n	8000f3e <H_SSD_void_DisplayNumber+0x3aa>
 8000ee6:	bf00      	nop
 8000ee8:	cccccccd 	.word	0xcccccccd
		case 9:
			M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000eec:	2201      	movs	r2, #1
 8000eee:	2101      	movs	r1, #1
 8000ef0:	2000      	movs	r0, #0
 8000ef2:	f7ff faad 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000ef6:	2201      	movs	r2, #1
 8000ef8:	2102      	movs	r1, #2
 8000efa:	2000      	movs	r0, #0
 8000efc:	f7ff faa8 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000f00:	2201      	movs	r2, #1
 8000f02:	2103      	movs	r1, #3
 8000f04:	2000      	movs	r0, #0
 8000f06:	f7ff faa3 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000f0a:	2201      	movs	r2, #1
 8000f0c:	2104      	movs	r1, #4
 8000f0e:	2000      	movs	r0, #0
 8000f10:	f7ff fa9e 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8000f14:	2200      	movs	r2, #0
 8000f16:	2105      	movs	r1, #5
 8000f18:	2000      	movs	r0, #0
 8000f1a:	f7ff fa99 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000f1e:	2201      	movs	r2, #1
 8000f20:	2106      	movs	r1, #6
 8000f22:	2000      	movs	r0, #0
 8000f24:	f7ff fa94 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8000f28:	2201      	movs	r2, #1
 8000f2a:	2107      	movs	r1, #7
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	f7ff fa8f 	bl	8000450 <M_GPIO_void_SetPinValue>
			M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000f32:	2200      	movs	r2, #0
 8000f34:	2108      	movs	r1, #8
 8000f36:	2000      	movs	r0, #0
 8000f38:	f7ff fa8a 	bl	8000450 <M_GPIO_void_SetPinValue>
			break;
 8000f3c:	bf00      	nop


		}
		//enable digit 1
		//disable digit 2
		M_GPIO_void_SetPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,HIGH);
 8000f3e:	2201      	movs	r2, #1
 8000f40:	2109      	movs	r1, #9
 8000f42:	2000      	movs	r0, #0
 8000f44:	f7ff fa84 	bl	8000450 <M_GPIO_void_SetPinValue>
		M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
 8000f48:	2200      	movs	r2, #0
 8000f4a:	210a      	movs	r1, #10
 8000f4c:	2000      	movs	r0, #0
 8000f4e:	f7ff fa7f 	bl	8000450 <M_GPIO_void_SetPinValue>
		 _delay_ms(3);
 8000f52:	2003      	movs	r0, #3
 8000f54:	f7ff f90c 	bl	8000170 <_delay_ms>
		M_GPIO_void_SetPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,LOW);
 8000f58:	2200      	movs	r2, #0
 8000f5a:	2109      	movs	r1, #9
 8000f5c:	2000      	movs	r0, #0
 8000f5e:	f7ff fa77 	bl	8000450 <M_GPIO_void_SetPinValue>
		switch (tens)
 8000f62:	7abb      	ldrb	r3, [r7, #10]
 8000f64:	2b09      	cmp	r3, #9
 8000f66:	f200 81b1 	bhi.w	80012cc <H_SSD_void_DisplayNumber+0x738>
 8000f6a:	a201      	add	r2, pc, #4	; (adr r2, 8000f70 <H_SSD_void_DisplayNumber+0x3dc>)
 8000f6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f70:	08000f99 	.word	0x08000f99
 8000f74:	08000feb 	.word	0x08000feb
 8000f78:	0800103d 	.word	0x0800103d
 8000f7c:	0800108f 	.word	0x0800108f
 8000f80:	080010e1 	.word	0x080010e1
 8000f84:	08001133 	.word	0x08001133
 8000f88:	08001185 	.word	0x08001185
 8000f8c:	080011d7 	.word	0x080011d7
 8000f90:	08001229 	.word	0x08001229
 8000f94:	0800127b 	.word	0x0800127b
		{
		       case 0:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8000f98:	2201      	movs	r2, #1
 8000f9a:	2101      	movs	r1, #1
 8000f9c:	2000      	movs	r0, #0
 8000f9e:	f7ff fa57 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000fa2:	2201      	movs	r2, #1
 8000fa4:	2102      	movs	r1, #2
 8000fa6:	2000      	movs	r0, #0
 8000fa8:	f7ff fa52 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000fac:	2201      	movs	r2, #1
 8000fae:	2103      	movs	r1, #3
 8000fb0:	2000      	movs	r0, #0
 8000fb2:	f7ff fa4d 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8000fb6:	2201      	movs	r2, #1
 8000fb8:	2104      	movs	r1, #4
 8000fba:	2000      	movs	r0, #0
 8000fbc:	f7ff fa48 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8000fc0:	2201      	movs	r2, #1
 8000fc2:	2105      	movs	r1, #5
 8000fc4:	2000      	movs	r0, #0
 8000fc6:	f7ff fa43 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8000fca:	2201      	movs	r2, #1
 8000fcc:	2106      	movs	r1, #6
 8000fce:	2000      	movs	r0, #0
 8000fd0:	f7ff fa3e 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	2107      	movs	r1, #7
 8000fd8:	2000      	movs	r0, #0
 8000fda:	f7ff fa39 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8000fde:	2200      	movs	r2, #0
 8000fe0:	2108      	movs	r1, #8
 8000fe2:	2000      	movs	r0, #0
 8000fe4:	f7ff fa34 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 8000fe8:	e170      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>

				case 1:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 8000fea:	2200      	movs	r2, #0
 8000fec:	2101      	movs	r1, #1
 8000fee:	2000      	movs	r0, #0
 8000ff0:	f7ff fa2e 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8000ff4:	2201      	movs	r2, #1
 8000ff6:	2102      	movs	r1, #2
 8000ff8:	2000      	movs	r0, #0
 8000ffa:	f7ff fa29 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8000ffe:	2201      	movs	r2, #1
 8001000:	2103      	movs	r1, #3
 8001002:	2000      	movs	r0, #0
 8001004:	f7ff fa24 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 8001008:	2200      	movs	r2, #0
 800100a:	2104      	movs	r1, #4
 800100c:	2000      	movs	r0, #0
 800100e:	f7ff fa1f 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8001012:	2200      	movs	r2, #0
 8001014:	2105      	movs	r1, #5
 8001016:	2000      	movs	r0, #0
 8001018:	f7ff fa1a 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 800101c:	2200      	movs	r2, #0
 800101e:	2106      	movs	r1, #6
 8001020:	2000      	movs	r0, #0
 8001022:	f7ff fa15 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8001026:	2200      	movs	r2, #0
 8001028:	2107      	movs	r1, #7
 800102a:	2000      	movs	r0, #0
 800102c:	f7ff fa10 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8001030:	2200      	movs	r2, #0
 8001032:	2108      	movs	r1, #8
 8001034:	2000      	movs	r0, #0
 8001036:	f7ff fa0b 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 800103a:	e147      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>

				case 2:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 800103c:	2201      	movs	r2, #1
 800103e:	2101      	movs	r1, #1
 8001040:	2000      	movs	r0, #0
 8001042:	f7ff fa05 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8001046:	2201      	movs	r2, #1
 8001048:	2102      	movs	r1, #2
 800104a:	2000      	movs	r0, #0
 800104c:	f7ff fa00 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
 8001050:	2200      	movs	r2, #0
 8001052:	2103      	movs	r1, #3
 8001054:	2000      	movs	r0, #0
 8001056:	f7ff f9fb 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 800105a:	2201      	movs	r2, #1
 800105c:	2104      	movs	r1, #4
 800105e:	2000      	movs	r0, #0
 8001060:	f7ff f9f6 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8001064:	2201      	movs	r2, #1
 8001066:	2105      	movs	r1, #5
 8001068:	2000      	movs	r0, #0
 800106a:	f7ff f9f1 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 800106e:	2200      	movs	r2, #0
 8001070:	2106      	movs	r1, #6
 8001072:	2000      	movs	r0, #0
 8001074:	f7ff f9ec 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8001078:	2201      	movs	r2, #1
 800107a:	2107      	movs	r1, #7
 800107c:	2000      	movs	r0, #0
 800107e:	f7ff f9e7 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8001082:	2200      	movs	r2, #0
 8001084:	2108      	movs	r1, #8
 8001086:	2000      	movs	r0, #0
 8001088:	f7ff f9e2 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 800108c:	e11e      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>

				case 3:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 800108e:	2201      	movs	r2, #1
 8001090:	2101      	movs	r1, #1
 8001092:	2000      	movs	r0, #0
 8001094:	f7ff f9dc 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8001098:	2201      	movs	r2, #1
 800109a:	2102      	movs	r1, #2
 800109c:	2000      	movs	r0, #0
 800109e:	f7ff f9d7 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 80010a2:	2201      	movs	r2, #1
 80010a4:	2103      	movs	r1, #3
 80010a6:	2000      	movs	r0, #0
 80010a8:	f7ff f9d2 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 80010ac:	2201      	movs	r2, #1
 80010ae:	2104      	movs	r1, #4
 80010b0:	2000      	movs	r0, #0
 80010b2:	f7ff f9cd 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 80010b6:	2200      	movs	r2, #0
 80010b8:	2105      	movs	r1, #5
 80010ba:	2000      	movs	r0, #0
 80010bc:	f7ff f9c8 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 80010c0:	2200      	movs	r2, #0
 80010c2:	2106      	movs	r1, #6
 80010c4:	2000      	movs	r0, #0
 80010c6:	f7ff f9c3 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 80010ca:	2201      	movs	r2, #1
 80010cc:	2107      	movs	r1, #7
 80010ce:	2000      	movs	r0, #0
 80010d0:	f7ff f9be 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 80010d4:	2200      	movs	r2, #0
 80010d6:	2108      	movs	r1, #8
 80010d8:	2000      	movs	r0, #0
 80010da:	f7ff f9b9 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 80010de:	e0f5      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>

				case 4:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
 80010e0:	2200      	movs	r2, #0
 80010e2:	2101      	movs	r1, #1
 80010e4:	2000      	movs	r0, #0
 80010e6:	f7ff f9b3 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 80010ea:	2201      	movs	r2, #1
 80010ec:	2102      	movs	r1, #2
 80010ee:	2000      	movs	r0, #0
 80010f0:	f7ff f9ae 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 80010f4:	2201      	movs	r2, #1
 80010f6:	2103      	movs	r1, #3
 80010f8:	2000      	movs	r0, #0
 80010fa:	f7ff f9a9 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 80010fe:	2200      	movs	r2, #0
 8001100:	2104      	movs	r1, #4
 8001102:	2000      	movs	r0, #0
 8001104:	f7ff f9a4 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 8001108:	2200      	movs	r2, #0
 800110a:	2105      	movs	r1, #5
 800110c:	2000      	movs	r0, #0
 800110e:	f7ff f99f 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8001112:	2201      	movs	r2, #1
 8001114:	2106      	movs	r1, #6
 8001116:	2000      	movs	r0, #0
 8001118:	f7ff f99a 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 800111c:	2201      	movs	r2, #1
 800111e:	2107      	movs	r1, #7
 8001120:	2000      	movs	r0, #0
 8001122:	f7ff f995 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8001126:	2200      	movs	r2, #0
 8001128:	2108      	movs	r1, #8
 800112a:	2000      	movs	r0, #0
 800112c:	f7ff f990 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 8001130:	e0cc      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>

				case 5:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8001132:	2201      	movs	r2, #1
 8001134:	2101      	movs	r1, #1
 8001136:	2000      	movs	r0, #0
 8001138:	f7ff f98a 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 800113c:	2200      	movs	r2, #0
 800113e:	2102      	movs	r1, #2
 8001140:	2000      	movs	r0, #0
 8001142:	f7ff f985 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8001146:	2201      	movs	r2, #1
 8001148:	2103      	movs	r1, #3
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff f980 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8001150:	2201      	movs	r2, #1
 8001152:	2104      	movs	r1, #4
 8001154:	2000      	movs	r0, #0
 8001156:	f7ff f97b 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 800115a:	2200      	movs	r2, #0
 800115c:	2105      	movs	r1, #5
 800115e:	2000      	movs	r0, #0
 8001160:	f7ff f976 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 8001164:	2201      	movs	r2, #1
 8001166:	2106      	movs	r1, #6
 8001168:	2000      	movs	r0, #0
 800116a:	f7ff f971 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 800116e:	2201      	movs	r2, #1
 8001170:	2107      	movs	r1, #7
 8001172:	2000      	movs	r0, #0
 8001174:	f7ff f96c 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 8001178:	2200      	movs	r2, #0
 800117a:	2108      	movs	r1, #8
 800117c:	2000      	movs	r0, #0
 800117e:	f7ff f967 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 8001182:	e0a3      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>
				case 6:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8001184:	2201      	movs	r2, #1
 8001186:	2101      	movs	r1, #1
 8001188:	2000      	movs	r0, #0
 800118a:	f7ff f961 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
 800118e:	2200      	movs	r2, #0
 8001190:	2102      	movs	r1, #2
 8001192:	2000      	movs	r0, #0
 8001194:	f7ff f95c 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 8001198:	2201      	movs	r2, #1
 800119a:	2103      	movs	r1, #3
 800119c:	2000      	movs	r0, #0
 800119e:	f7ff f957 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 80011a2:	2201      	movs	r2, #1
 80011a4:	2104      	movs	r1, #4
 80011a6:	2000      	movs	r0, #0
 80011a8:	f7ff f952 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 80011ac:	2201      	movs	r2, #1
 80011ae:	2105      	movs	r1, #5
 80011b0:	2000      	movs	r0, #0
 80011b2:	f7ff f94d 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 80011b6:	2201      	movs	r2, #1
 80011b8:	2106      	movs	r1, #6
 80011ba:	2000      	movs	r0, #0
 80011bc:	f7ff f948 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 80011c0:	2201      	movs	r2, #1
 80011c2:	2107      	movs	r1, #7
 80011c4:	2000      	movs	r0, #0
 80011c6:	f7ff f943 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 80011ca:	2200      	movs	r2, #0
 80011cc:	2108      	movs	r1, #8
 80011ce:	2000      	movs	r0, #0
 80011d0:	f7ff f93e 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 80011d4:	e07a      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>
				case 7:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 80011d6:	2201      	movs	r2, #1
 80011d8:	2101      	movs	r1, #1
 80011da:	2000      	movs	r0, #0
 80011dc:	f7ff f938 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 80011e0:	2201      	movs	r2, #1
 80011e2:	2102      	movs	r1, #2
 80011e4:	2000      	movs	r0, #0
 80011e6:	f7ff f933 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 80011ea:	2201      	movs	r2, #1
 80011ec:	2103      	movs	r1, #3
 80011ee:	2000      	movs	r0, #0
 80011f0:	f7ff f92e 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
 80011f4:	2200      	movs	r2, #0
 80011f6:	2104      	movs	r1, #4
 80011f8:	2000      	movs	r0, #0
 80011fa:	f7ff f929 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 80011fe:	2200      	movs	r2, #0
 8001200:	2105      	movs	r1, #5
 8001202:	2000      	movs	r0, #0
 8001204:	f7ff f924 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
 8001208:	2200      	movs	r2, #0
 800120a:	2106      	movs	r1, #6
 800120c:	2000      	movs	r0, #0
 800120e:	f7ff f91f 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
 8001212:	2200      	movs	r2, #0
 8001214:	2107      	movs	r1, #7
 8001216:	2000      	movs	r0, #0
 8001218:	f7ff f91a 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 800121c:	2200      	movs	r2, #0
 800121e:	2108      	movs	r1, #8
 8001220:	2000      	movs	r0, #0
 8001222:	f7ff f915 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 8001226:	e051      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>
				case 8:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 8001228:	2201      	movs	r2, #1
 800122a:	2101      	movs	r1, #1
 800122c:	2000      	movs	r0, #0
 800122e:	f7ff f90f 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8001232:	2201      	movs	r2, #1
 8001234:	2102      	movs	r1, #2
 8001236:	2000      	movs	r0, #0
 8001238:	f7ff f90a 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 800123c:	2201      	movs	r2, #1
 800123e:	2103      	movs	r1, #3
 8001240:	2000      	movs	r0, #0
 8001242:	f7ff f905 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8001246:	2201      	movs	r2, #1
 8001248:	2104      	movs	r1, #4
 800124a:	2000      	movs	r0, #0
 800124c:	f7ff f900 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
 8001250:	2201      	movs	r2, #1
 8001252:	2105      	movs	r1, #5
 8001254:	2000      	movs	r0, #0
 8001256:	f7ff f8fb 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 800125a:	2201      	movs	r2, #1
 800125c:	2106      	movs	r1, #6
 800125e:	2000      	movs	r0, #0
 8001260:	f7ff f8f6 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 8001264:	2201      	movs	r2, #1
 8001266:	2107      	movs	r1, #7
 8001268:	2000      	movs	r0, #0
 800126a:	f7ff f8f1 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 800126e:	2200      	movs	r2, #0
 8001270:	2108      	movs	r1, #8
 8001272:	2000      	movs	r0, #0
 8001274:	f7ff f8ec 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 8001278:	e028      	b.n	80012cc <H_SSD_void_DisplayNumber+0x738>
				case 9:
					M_GPIO_void_SetPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
 800127a:	2201      	movs	r2, #1
 800127c:	2101      	movs	r1, #1
 800127e:	2000      	movs	r0, #0
 8001280:	f7ff f8e6 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
 8001284:	2201      	movs	r2, #1
 8001286:	2102      	movs	r1, #2
 8001288:	2000      	movs	r0, #0
 800128a:	f7ff f8e1 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
 800128e:	2201      	movs	r2, #1
 8001290:	2103      	movs	r1, #3
 8001292:	2000      	movs	r0, #0
 8001294:	f7ff f8dc 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
 8001298:	2201      	movs	r2, #1
 800129a:	2104      	movs	r1, #4
 800129c:	2000      	movs	r0, #0
 800129e:	f7ff f8d7 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
 80012a2:	2200      	movs	r2, #0
 80012a4:	2105      	movs	r1, #5
 80012a6:	2000      	movs	r0, #0
 80012a8:	f7ff f8d2 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
 80012ac:	2201      	movs	r2, #1
 80012ae:	2106      	movs	r1, #6
 80012b0:	2000      	movs	r0, #0
 80012b2:	f7ff f8cd 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
 80012b6:	2201      	movs	r2, #1
 80012b8:	2107      	movs	r1, #7
 80012ba:	2000      	movs	r0, #0
 80012bc:	f7ff f8c8 	bl	8000450 <M_GPIO_void_SetPinValue>
					M_GPIO_void_SetPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
 80012c0:	2200      	movs	r2, #0
 80012c2:	2108      	movs	r1, #8
 80012c4:	2000      	movs	r0, #0
 80012c6:	f7ff f8c3 	bl	8000450 <M_GPIO_void_SetPinValue>
					break;
 80012ca:	bf00      	nop



				}
		//enable digit 2
		M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,HIGH);
 80012cc:	2201      	movs	r2, #1
 80012ce:	210a      	movs	r1, #10
 80012d0:	2000      	movs	r0, #0
 80012d2:	f7ff f8bd 	bl	8000450 <M_GPIO_void_SetPinValue>

		 _delay_ms(3);
 80012d6:	2003      	movs	r0, #3
 80012d8:	f7fe ff4a 	bl	8000170 <_delay_ms>
		M_GPIO_void_SetPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
 80012dc:	2200      	movs	r2, #0
 80012de:	210a      	movs	r1, #10
 80012e0:	2000      	movs	r0, #0
 80012e2:	f7ff f8b5 	bl	8000450 <M_GPIO_void_SetPinValue>
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
 80012e6:	68fb      	ldr	r3, [r7, #12]
 80012e8:	3301      	adds	r3, #1
 80012ea:	60fb      	str	r3, [r7, #12]
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	2b13      	cmp	r3, #19
 80012f0:	f67f ac6d 	bls.w	8000bce <H_SSD_void_DisplayNumber+0x3a>
 80012f4:	e000      	b.n	80012f8 <H_SSD_void_DisplayNumber+0x764>
		return;
 80012f6:	bf00      	nop
	}
}
 80012f8:	3710      	adds	r7, #16
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bd80      	pop	{r7, pc}
 80012fe:	bf00      	nop

08001300 <SysTick_Handler>:
	Local_u32RemainingTime =  (STK -> VAL);
	return Local_u32RemainingTime;
}
//Core Peripheral
void	SysTick_Handler(void)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	b082      	sub	sp, #8
 8001304:	af00      	add	r7, sp, #0
	u8 Local_u8Temp ;
	if(STK_u8ModeOfInterval == STK_SINGLE_INTERVAL)
 8001306:	4b12      	ldr	r3, [pc, #72]	; (8001350 <SysTick_Handler+0x50>)
 8001308:	781b      	ldrb	r3, [r3, #0]
 800130a:	2b02      	cmp	r3, #2
 800130c:	d111      	bne.n	8001332 <SysTick_Handler+0x32>
	{
		/*	1- Disable the Interrupt 	*/
			CLR_BIT(STK -> CTRL , 1);
 800130e:	4b11      	ldr	r3, [pc, #68]	; (8001354 <SysTick_Handler+0x54>)
 8001310:	681b      	ldr	r3, [r3, #0]
 8001312:	4a10      	ldr	r2, [pc, #64]	; (8001354 <SysTick_Handler+0x54>)
 8001314:	f023 0302 	bic.w	r3, r3, #2
 8001318:	6013      	str	r3, [r2, #0]
		/*	2- Stop the timer			*/
			CLR_BIT(STK -> CTRL , 0);
 800131a:	4b0e      	ldr	r3, [pc, #56]	; (8001354 <SysTick_Handler+0x54>)
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	4a0d      	ldr	r2, [pc, #52]	; (8001354 <SysTick_Handler+0x54>)
 8001320:	f023 0301 	bic.w	r3, r3, #1
 8001324:	6013      	str	r3, [r2, #0]
			STK -> LOAD	= 0;
 8001326:	4b0b      	ldr	r3, [pc, #44]	; (8001354 <SysTick_Handler+0x54>)
 8001328:	2200      	movs	r2, #0
 800132a:	605a      	str	r2, [r3, #4]
			STK -> VAL	= 0;
 800132c:	4b09      	ldr	r3, [pc, #36]	; (8001354 <SysTick_Handler+0x54>)
 800132e:	2200      	movs	r2, #0
 8001330:	609a      	str	r2, [r3, #8]
	}
	SysTick_CallBack();
 8001332:	4b09      	ldr	r3, [pc, #36]	; (8001358 <SysTick_Handler+0x58>)
 8001334:	681b      	ldr	r3, [r3, #0]
 8001336:	4798      	blx	r3
	/*	Clear Interrupt Flag by reading the Flag */
	Local_u8Temp	=	GET_BIT(STK -> CTRL , 16);
 8001338:	4b06      	ldr	r3, [pc, #24]	; (8001354 <SysTick_Handler+0x54>)
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	0c1b      	lsrs	r3, r3, #16
 800133e:	b2db      	uxtb	r3, r3
 8001340:	f003 0301 	and.w	r3, r3, #1
 8001344:	71fb      	strb	r3, [r7, #7]
}
 8001346:	bf00      	nop
 8001348:	3708      	adds	r7, #8
 800134a:	46bd      	mov	sp, r7
 800134c:	bd80      	pop	{r7, pc}
 800134e:	bf00      	nop
 8001350:	20000030 	.word	0x20000030
 8001354:	e000e010 	.word	0xe000e010
 8001358:	2000002c 	.word	0x2000002c

0800135c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800135c:	480d      	ldr	r0, [pc, #52]	; (8001394 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800135e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001360:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001364:	480c      	ldr	r0, [pc, #48]	; (8001398 <LoopForever+0x6>)
  ldr r1, =_edata
 8001366:	490d      	ldr	r1, [pc, #52]	; (800139c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001368:	4a0d      	ldr	r2, [pc, #52]	; (80013a0 <LoopForever+0xe>)
  movs r3, #0
 800136a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800136c:	e002      	b.n	8001374 <LoopCopyDataInit>

0800136e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800136e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001370:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001372:	3304      	adds	r3, #4

08001374 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001374:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001376:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001378:	d3f9      	bcc.n	800136e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800137a:	4a0a      	ldr	r2, [pc, #40]	; (80013a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800137c:	4c0a      	ldr	r4, [pc, #40]	; (80013a8 <LoopForever+0x16>)
  movs r3, #0
 800137e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001380:	e001      	b.n	8001386 <LoopFillZerobss>

08001382 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001382:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001384:	3204      	adds	r2, #4

08001386 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001386:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001388:	d3fb      	bcc.n	8001382 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800138a:	f000 f811 	bl	80013b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800138e:	f7ff f9b5 	bl	80006fc <main>

08001392 <LoopForever>:

LoopForever:
  b LoopForever
 8001392:	e7fe      	b.n	8001392 <LoopForever>
  ldr   r0, =_estack
 8001394:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8001398:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800139c:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80013a0:	08001418 	.word	0x08001418
  ldr r2, =_sbss
 80013a4:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80013a8:	20000034 	.word	0x20000034

080013ac <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80013ac:	e7fe      	b.n	80013ac <ADC1_2_IRQHandler>
	...

080013b0 <__libc_init_array>:
 80013b0:	b570      	push	{r4, r5, r6, lr}
 80013b2:	2600      	movs	r6, #0
 80013b4:	4d0c      	ldr	r5, [pc, #48]	; (80013e8 <__libc_init_array+0x38>)
 80013b6:	4c0d      	ldr	r4, [pc, #52]	; (80013ec <__libc_init_array+0x3c>)
 80013b8:	1b64      	subs	r4, r4, r5
 80013ba:	10a4      	asrs	r4, r4, #2
 80013bc:	42a6      	cmp	r6, r4
 80013be:	d109      	bne.n	80013d4 <__libc_init_array+0x24>
 80013c0:	f000 f81a 	bl	80013f8 <_init>
 80013c4:	2600      	movs	r6, #0
 80013c6:	4d0a      	ldr	r5, [pc, #40]	; (80013f0 <__libc_init_array+0x40>)
 80013c8:	4c0a      	ldr	r4, [pc, #40]	; (80013f4 <__libc_init_array+0x44>)
 80013ca:	1b64      	subs	r4, r4, r5
 80013cc:	10a4      	asrs	r4, r4, #2
 80013ce:	42a6      	cmp	r6, r4
 80013d0:	d105      	bne.n	80013de <__libc_init_array+0x2e>
 80013d2:	bd70      	pop	{r4, r5, r6, pc}
 80013d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80013d8:	4798      	blx	r3
 80013da:	3601      	adds	r6, #1
 80013dc:	e7ee      	b.n	80013bc <__libc_init_array+0xc>
 80013de:	f855 3b04 	ldr.w	r3, [r5], #4
 80013e2:	4798      	blx	r3
 80013e4:	3601      	adds	r6, #1
 80013e6:	e7f2      	b.n	80013ce <__libc_init_array+0x1e>
 80013e8:	08001410 	.word	0x08001410
 80013ec:	08001410 	.word	0x08001410
 80013f0:	08001410 	.word	0x08001410
 80013f4:	08001414 	.word	0x08001414

080013f8 <_init>:
 80013f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013fa:	bf00      	nop
 80013fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013fe:	bc08      	pop	{r3}
 8001400:	469e      	mov	lr, r3
 8001402:	4770      	bx	lr

08001404 <_fini>:
 8001404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001406:	bf00      	nop
 8001408:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800140a:	bc08      	pop	{r3}
 800140c:	469e      	mov	lr, r3
 800140e:	4770      	bx	lr
